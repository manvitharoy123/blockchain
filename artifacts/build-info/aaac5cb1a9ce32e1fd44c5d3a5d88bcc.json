{
	"id": "aaac5cb1a9ce32e1fd44c5d3a5d88bcc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"blockchain/payrollSystem.sol": {
				"content": "pragma solidity ^0.4.4;\r\n\r\ncontract payrollSystem{\r\n    \r\n    address company;\r\n    \r\n    struct employee {\r\n        bool active;\r\n        bool paid;\r\n        uint salary;\r\n        uint balance;\r\n    }\r\n    \r\n    event Transfer(address indexed from, address indexed to,uint amount);\r\n    \r\n    mapping(address => employee) employeeMapper; \r\n    address[] employeeList;\r\n    \r\n    //constructor of the contract\r\n    function payrollSystem(){\r\n        company = msg.sender;\r\n    }\r\n    \r\n    //to allow transactions only through the company account\r\n    modifier onlyCompany(){\r\n       if(msg.sender != company){\r\n           revert();\r\n       }\r\n        _;\r\n    }\r\n    \r\n    //to add an employee to the company's list of employees\r\n    function addEmployee(address newEmployee, uint salary) onlyCompany{\r\n        var _employee = employeeMapper[newEmployee];\r\n        _employee.active = true;\r\n        _employee.salary = salary;\r\n        _employee.balance = 0;\r\n        employeeList.push(newEmployee);\r\n    }\r\n    \r\n    //if at all the employee leaves the company, we can use this function to turn him inactive\r\n    function removeEmployee(address _address) onlyCompany{\r\n        employeeMapper[_address].active = false;\r\n    }\r\n    \r\n    //this function can be used to give a raise in the salary of an employee\r\n    function updateSalary(address _address, uint newSalary) onlyCompany{\r\n        employeeMapper[_address].salary = newSalary;\r\n    }\r\n    \r\n    function listOutEmployees() onlyCompany constant returns(address[]){\r\n        return employeeList;\r\n    }\r\n    \r\n    //deposit the initial amount a company would start with. It can be updated as the investment grows\r\n    function depositInvestment() onlyCompany payable{\r\n     \r\n    }\r\n    \r\n    function totalSupply() onlyCompany constant returns(uint){\r\n       return this.balance;\r\n    }\r\n    \r\n    //validate whether the employee is still working in the company\r\n    function isActive(address check) constant returns(bool){\r\n        return employeeMapper[check].active;\r\n    }\r\n    \r\n\r\n    //this sends the salary to the employee account    \r\n    function transfer(address _address) private{\r\n       if(employeeMapper[_address].salary < this.balance){\r\n           transferLog(_address);\r\n           employeeMapper[_address].paid = true;\r\n           employeeMapper[_address].balance += employeeMapper[_address].salary;\r\n       }else{\r\n           employeeMapper[_address].paid = false;\r\n       }\r\n    }\r\n    \r\n    function transferLog(address _address) private{\r\n        Transfer(msg.sender,_address,employeeMapper[_address].salary);\r\n    }\r\n    \r\n    //first we check whether the employee is working in the company and then check for double spend\r\n    function sendSalary(address sendTo){\r\n        if(isActive(sendTo) && !employeeMapper[sendTo].paid){\r\n            transfer(sendTo);\r\n        }\r\n    } \r\n    \r\n    \r\n    function balanceOf(address empAd) public constant returns(uint){\r\n        return employeeMapper[empAd].balance;\r\n    }\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"blockchain/payrollSystem.sol": {
				"payrollSystem": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_address",
									"type": "address"
								},
								{
									"name": "newSalary",
									"type": "uint256"
								}
							],
							"name": "updateSalary",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sendTo",
									"type": "address"
								}
							],
							"name": "sendSalary",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "depositInvestment",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "empAd",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "check",
									"type": "address"
								}
							],
							"name": "isActive",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeEmployee",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "listOutEmployees",
							"outputs": [
								{
									"name": "",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newEmployee",
									"type": "address"
								},
								{
									"name": "salary",
									"type": "uint256"
								}
							],
							"name": "addEmployee",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"blockchain/payrollSystem.sol\":27:3004  contract payrollSystem{\r... */\n  mstore(0x40, 0x80)\n    /* \"blockchain/payrollSystem.sol\":415:478  function payrollSystem(){\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"blockchain/payrollSystem.sol\":415:478  function payrollSystem(){\r... */\n  pop\n    /* \"blockchain/payrollSystem.sol\":460:470  msg.sender */\n  caller\n    /* \"blockchain/payrollSystem.sol\":450:457  company */\n  0x0\n  dup1\n    /* \"blockchain/payrollSystem.sol\":450:470  company = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockchain/payrollSystem.sol\":27:3004  contract payrollSystem{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"blockchain/payrollSystem.sol\":27:3004  contract payrollSystem{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x18160ddd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x22003f10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3c9266e0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x661956fb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9f8a13d7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd108177a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe53cacba\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe7fd9a13\n      eq\n      tag_10\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"blockchain/payrollSystem.sol\":1751:1845  function totalSupply() onlyCompany constant returns(uint){\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"blockchain/payrollSystem.sol\":1751:1845  function totalSupply() onlyCompany constant returns(uint){\r... */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockchain/payrollSystem.sol\":1314:1443  function updateSalary(address _address, uint newSalary) onlyCompany{\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"blockchain/payrollSystem.sol\":1314:1443  function updateSalary(address _address, uint newSalary) onlyCompany{\r... */\n      pop\n      tag_15\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_16)\n    tag_15:\n      stop\n        /* \"blockchain/payrollSystem.sol\":2710:2858  function sendSalary(address sendTo){\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"blockchain/payrollSystem.sol\":2710:2858  function sendSalary(address sendTo){\r... */\n      pop\n      tag_18\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_19)\n    tag_18:\n      stop\n        /* \"blockchain/payrollSystem.sol\":1676:1739  function depositInvestment() onlyCompany payable{\r... */\n    tag_5:\n      tag_20\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"blockchain/payrollSystem.sol\":2877:2995  function balanceOf(address empAd) public constant returns(uint){\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"blockchain/payrollSystem.sol\":2877:2995  function balanceOf(address empAd) public constant returns(uint){\r... */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockchain/payrollSystem.sol\":1926:2035  function isActive(address check) constant returns(bool){\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"blockchain/payrollSystem.sol\":1926:2035  function isActive(address check) constant returns(bool){\r... */\n      pop\n      tag_26\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockchain/payrollSystem.sol\":1113:1224  function removeEmployee(address _address) onlyCompany{\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"blockchain/payrollSystem.sol\":1113:1224  function removeEmployee(address _address) onlyCompany{\r... */\n      pop\n      tag_29\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_30)\n    tag_29:\n      stop\n        /* \"blockchain/payrollSystem.sol\":1455:1560  function listOutEmployees() onlyCompany constant returns(address[]){\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"blockchain/payrollSystem.sol\":1455:1560  function listOutEmployees() onlyCompany constant returns(address[]){\r... */\n      pop\n      tag_32\n      jump(tag_33)\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_34:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_34)\n    tag_35:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"blockchain/payrollSystem.sol\":1455:1560  function listOutEmployees() onlyCompany constant returns(address[]){\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockchain/payrollSystem.sol\":734:1005  function addEmployee(address newEmployee, uint salary) onlyCompany{\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"blockchain/payrollSystem.sol\":734:1005  function addEmployee(address newEmployee, uint salary) onlyCompany{\r... */\n      pop\n      tag_38\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_39)\n    tag_38:\n      stop\n        /* \"blockchain/payrollSystem.sol\":1751:1845  function totalSupply() onlyCompany constant returns(uint){\r... */\n    tag_13:\n        /* \"blockchain/payrollSystem.sol\":1803:1807  uint */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":601:608  company */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:597  msg.sender */\n      caller\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n      iszero\n      tag_41\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":623:631  revert() */\n      0x0\n      dup1\n      revert\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n    tag_41:\n        /* \"blockchain/payrollSystem.sol\":1825:1829  this */\n      address\n        /* \"blockchain/payrollSystem.sol\":1825:1837  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"blockchain/payrollSystem.sol\":1818:1837  return this.balance */\n      swap1\n      pop\n        /* \"blockchain/payrollSystem.sol\":1751:1845  function totalSupply() onlyCompany constant returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":1314:1443  function updateSalary(address _address, uint newSalary) onlyCompany{\r... */\n    tag_16:\n        /* \"blockchain/payrollSystem.sol\":601:608  company */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:597  msg.sender */\n      caller\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n      iszero\n      tag_44\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":623:631  revert() */\n      0x0\n      dup1\n      revert\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n    tag_44:\n        /* \"blockchain/payrollSystem.sol\":1426:1435  newSalary */\n      dup1\n        /* \"blockchain/payrollSystem.sol\":1392:1406  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":1392:1416  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":1407:1415  _address */\n      dup5\n        /* \"blockchain/payrollSystem.sol\":1392:1416  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":1392:1423  employeeMapper[_address].salary */\n      0x1\n      add\n        /* \"blockchain/payrollSystem.sol\":1392:1435  employeeMapper[_address].salary = newSalary */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":1314:1443  function updateSalary(address _address, uint newSalary) onlyCompany{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":2710:2858  function sendSalary(address sendTo){\r... */\n    tag_19:\n        /* \"blockchain/payrollSystem.sol\":2759:2775  isActive(sendTo) */\n      tag_47\n        /* \"blockchain/payrollSystem.sol\":2768:2774  sendTo */\n      dup2\n        /* \"blockchain/payrollSystem.sol\":2759:2767  isActive */\n      tag_27\n        /* \"blockchain/payrollSystem.sol\":2759:2775  isActive(sendTo) */\n      jump\t// in\n    tag_47:\n        /* \"blockchain/payrollSystem.sol\":2759:2807  isActive(sendTo) && !employeeMapper[sendTo].paid */\n      dup1\n      iszero\n      tag_48\n      jumpi\n      pop\n        /* \"blockchain/payrollSystem.sol\":2780:2794  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2780:2802  employeeMapper[sendTo] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2795:2801  sendTo */\n      dup3\n        /* \"blockchain/payrollSystem.sol\":2780:2802  employeeMapper[sendTo] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2780:2807  employeeMapper[sendTo].paid */\n      0x0\n      add\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockchain/payrollSystem.sol\":2779:2807  !employeeMapper[sendTo].paid */\n      iszero\n        /* \"blockchain/payrollSystem.sol\":2759:2807  isActive(sendTo) && !employeeMapper[sendTo].paid */\n    tag_48:\n        /* \"blockchain/payrollSystem.sol\":2756:2851  if(isActive(sendTo) && !employeeMapper[sendTo].paid){\r... */\n      iszero\n      tag_49\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":2823:2839  transfer(sendTo) */\n      tag_50\n        /* \"blockchain/payrollSystem.sol\":2832:2838  sendTo */\n      dup2\n        /* \"blockchain/payrollSystem.sol\":2823:2831  transfer */\n      tag_51\n        /* \"blockchain/payrollSystem.sol\":2823:2839  transfer(sendTo) */\n      jump\t// in\n    tag_50:\n        /* \"blockchain/payrollSystem.sol\":2756:2851  if(isActive(sendTo) && !employeeMapper[sendTo].paid){\r... */\n    tag_49:\n        /* \"blockchain/payrollSystem.sol\":2710:2858  function sendSalary(address sendTo){\r... */\n      pop\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":1676:1739  function depositInvestment() onlyCompany payable{\r... */\n    tag_21:\n        /* \"blockchain/payrollSystem.sol\":601:608  company */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:597  msg.sender */\n      caller\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n      iszero\n      tag_53\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":623:631  revert() */\n      0x0\n      dup1\n      revert\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n    tag_53:\n        /* \"blockchain/payrollSystem.sol\":1676:1739  function depositInvestment() onlyCompany payable{\r... */\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":2877:2995  function balanceOf(address empAd) public constant returns(uint){\r... */\n    tag_24:\n        /* \"blockchain/payrollSystem.sol\":2935:2939  uint */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2958:2972  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2958:2979  employeeMapper[empAd] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2973:2978  empAd */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":2958:2979  employeeMapper[empAd] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2958:2987  employeeMapper[empAd].balance */\n      0x2\n      add\n      sload\n        /* \"blockchain/payrollSystem.sol\":2951:2987  return employeeMapper[empAd].balance */\n      swap1\n      pop\n        /* \"blockchain/payrollSystem.sol\":2877:2995  function balanceOf(address empAd) public constant returns(uint){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":1926:2035  function isActive(address check) constant returns(bool){\r... */\n    tag_27:\n        /* \"blockchain/payrollSystem.sol\":1976:1980  bool */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":1999:2013  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":1999:2020  employeeMapper[check] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2014:2019  check */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":1999:2020  employeeMapper[check] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":1999:2027  employeeMapper[check].active */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockchain/payrollSystem.sol\":1992:2027  return employeeMapper[check].active */\n      swap1\n      pop\n        /* \"blockchain/payrollSystem.sol\":1926:2035  function isActive(address check) constant returns(bool){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":1113:1224  function removeEmployee(address _address) onlyCompany{\r... */\n    tag_30:\n        /* \"blockchain/payrollSystem.sol\":601:608  company */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:597  msg.sender */\n      caller\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n      iszero\n      tag_58\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":623:631  revert() */\n      0x0\n      dup1\n      revert\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n    tag_58:\n        /* \"blockchain/payrollSystem.sol\":1211:1216  false */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":1177:1191  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":1177:1201  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":1192:1200  _address */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":1177:1201  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":1177:1208  employeeMapper[_address].active */\n      0x0\n      add\n      0x0\n        /* \"blockchain/payrollSystem.sol\":1177:1216  employeeMapper[_address].active = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":1113:1224  function removeEmployee(address _address) onlyCompany{\r... */\n      pop\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":1455:1560  function listOutEmployees() onlyCompany constant returns(address[]){\r... */\n    tag_33:\n        /* \"blockchain/payrollSystem.sol\":1512:1521  address[] */\n      0x60\n        /* \"blockchain/payrollSystem.sol\":601:608  company */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:597  msg.sender */\n      caller\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n      iszero\n      tag_61\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":623:631  revert() */\n      0x0\n      dup1\n      revert\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n    tag_61:\n        /* \"blockchain/payrollSystem.sol\":1540:1552  employeeList */\n      0x2\n        /* \"blockchain/payrollSystem.sol\":1533:1552  return employeeList */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_64:\n      dup2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"blockchain/payrollSystem.sol\":1455:1560  function listOutEmployees() onlyCompany constant returns(address[]){\r... */\n      swap1\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":734:1005  function addEmployee(address newEmployee, uint salary) onlyCompany{\r... */\n    tag_39:\n        /* \"blockchain/payrollSystem.sol\":811:824  var _employee */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":601:608  company */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":587:597  msg.sender */\n      caller\n        /* \"blockchain/payrollSystem.sol\":587:608  msg.sender != company */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n      iszero\n      tag_66\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":623:631  revert() */\n      0x0\n      dup1\n      revert\n        /* \"blockchain/payrollSystem.sol\":584:642  if(msg.sender != company){\r... */\n    tag_66:\n        /* \"blockchain/payrollSystem.sol\":827:841  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":827:854  employeeMapper[newEmployee] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":842:853  newEmployee */\n      dup5\n        /* \"blockchain/payrollSystem.sol\":827:854  employeeMapper[newEmployee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":811:854  var _employee = employeeMapper[newEmployee] */\n      swap1\n      pop\n        /* \"blockchain/payrollSystem.sol\":884:888  true */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":865:874  _employee */\n      dup2\n        /* \"blockchain/payrollSystem.sol\":865:881  _employee.active */\n      0x0\n      add\n      0x0\n        /* \"blockchain/payrollSystem.sol\":865:888  _employee.active = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":918:924  salary */\n      dup2\n        /* \"blockchain/payrollSystem.sol\":899:908  _employee */\n      dup2\n        /* \"blockchain/payrollSystem.sol\":899:915  _employee.salary */\n      0x1\n      add\n        /* \"blockchain/payrollSystem.sol\":899:924  _employee.salary = salary */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":955:956  0 */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":935:944  _employee */\n      dup2\n        /* \"blockchain/payrollSystem.sol\":935:952  _employee.balance */\n      0x2\n      add\n        /* \"blockchain/payrollSystem.sol\":935:956  _employee.balance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":967:979  employeeList */\n      0x2\n        /* \"blockchain/payrollSystem.sol\":985:996  newEmployee */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":967:997  employeeList.push(newEmployee) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"blockchain/payrollSystem.sol\":967:997  employeeList.push(newEmployee) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"blockchain/payrollSystem.sol\":734:1005  function addEmployee(address newEmployee, uint salary) onlyCompany{\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":2106:2459  function transfer(address _address) private{\r... */\n    tag_51:\n        /* \"blockchain/payrollSystem.sol\":2196:2200  this */\n      address\n        /* \"blockchain/payrollSystem.sol\":2196:2208  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"blockchain/payrollSystem.sol\":2162:2176  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2162:2186  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2177:2185  _address */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":2162:2186  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2162:2193  employeeMapper[_address].salary */\n      0x1\n      add\n      sload\n        /* \"blockchain/payrollSystem.sol\":2162:2208  employeeMapper[_address].salary < this.balance */\n      lt\n        /* \"blockchain/payrollSystem.sol\":2159:2452  if(employeeMapper[_address].salary < this.balance){\r... */\n      iszero\n      tag_70\n      jumpi\n        /* \"blockchain/payrollSystem.sol\":2223:2244  transferLog(_address) */\n      tag_71\n        /* \"blockchain/payrollSystem.sol\":2235:2243  _address */\n      dup2\n        /* \"blockchain/payrollSystem.sol\":2223:2234  transferLog */\n      tag_72\n        /* \"blockchain/payrollSystem.sol\":2223:2244  transferLog(_address) */\n      jump\t// in\n    tag_71:\n        /* \"blockchain/payrollSystem.sol\":2290:2294  true */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2258:2272  employeeMapper */\n      dup1\n        /* \"blockchain/payrollSystem.sol\":2258:2282  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2273:2281  _address */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":2258:2282  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2258:2287  employeeMapper[_address].paid */\n      0x0\n      add\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2258:2294  employeeMapper[_address].paid = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":2344:2358  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2344:2368  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2359:2367  _address */\n      dup3\n        /* \"blockchain/payrollSystem.sol\":2344:2368  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2344:2375  employeeMapper[_address].salary */\n      0x1\n      add\n      sload\n        /* \"blockchain/payrollSystem.sol\":2308:2322  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2308:2332  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2323:2331  _address */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":2308:2332  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2308:2340  employeeMapper[_address].balance */\n      0x2\n      add\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2308:2375  employeeMapper[_address].balance += employeeMapper[_address].salary */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":2159:2452  if(employeeMapper[_address].salary < this.balance){\r... */\n      jump(tag_73)\n    tag_70:\n        /* \"blockchain/payrollSystem.sol\":2436:2441  false */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2404:2418  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2404:2428  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2419:2427  _address */\n      dup4\n        /* \"blockchain/payrollSystem.sol\":2404:2428  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2404:2433  employeeMapper[_address].paid */\n      0x0\n      add\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2404:2441  employeeMapper[_address].paid = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockchain/payrollSystem.sol\":2159:2452  if(employeeMapper[_address].salary < this.balance){\r... */\n    tag_73:\n        /* \"blockchain/payrollSystem.sol\":2106:2459  function transfer(address _address) private{\r... */\n      pop\n      jump\t// out\n        /* \"blockchain/payrollSystem.sol\":2471:2597  function transferLog(address _address) private{\r... */\n    tag_72:\n        /* \"blockchain/payrollSystem.sol\":2548:2556  _address */\n      dup1\n        /* \"blockchain/payrollSystem.sol\":2528:2589  Transfer(msg.sender,_address,employeeMapper[_address].salary) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/payrollSystem.sol\":2537:2547  msg.sender */\n      caller\n        /* \"blockchain/payrollSystem.sol\":2528:2589  Transfer(msg.sender,_address,employeeMapper[_address].salary) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"blockchain/payrollSystem.sol\":2557:2571  employeeMapper */\n      0x1\n        /* \"blockchain/payrollSystem.sol\":2557:2581  employeeMapper[_address] */\n      0x0\n        /* \"blockchain/payrollSystem.sol\":2572:2580  _address */\n      dup6\n        /* \"blockchain/payrollSystem.sol\":2557:2581  employeeMapper[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"blockchain/payrollSystem.sol\":2557:2588  employeeMapper[_address].salary */\n      0x1\n      add\n      sload\n        /* \"blockchain/payrollSystem.sol\":2528:2589  Transfer(msg.sender,_address,employeeMapper[_address].salary) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"blockchain/payrollSystem.sol\":2471:2597  function transferLog(address _address) private{\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820de0eb13bb1001a2816eed283d3e1e230fc566c2870da2e2e5f82d77b5a1cf4a50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b12806100606000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461009e57806322003f10146100c95780633c9266e014610116578063661956fb1461015957806370a08231146101635780639f8a13d7146101ba578063d108177a14610215578063e53cacba14610258578063e7fd9a13146102c4575b600080fd5b3480156100aa57600080fd5b506100b3610311565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b50610114600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061038b565b005b34801561012257600080fd5b50610157600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610431565b005b6101616104a5565b005b34801561016f57600080fd5b506101a4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610502565b6040518082815260200191505060405180910390f35b3480156101c657600080fd5b506101fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054e565b604051808215151515815260200191505060405180910390f35b34801561022157600080fd5b50610256600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105a7565b005b34801561026457600080fd5b5061026d610660565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102b0578082015181840152602081019050610295565b505050509050019250505060405180910390f35b3480156102d057600080fd5b5061030f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610749565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036e57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103e657600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b61043a8161054e565b80156104935750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16155b156104a2576104a181610882565b5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561050057600080fd5b565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561060257600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555050565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106bd57600080fd5b600280548060200260200160405190810160405280929190818152602001828054801561073f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f5575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107a657600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160000160006101000a81548160ff0219169083151502179055508181600101819055506000816002018190555060028390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b3073ffffffffffffffffffffffffffffffffffffffff1631600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015410156109dd576108ec81610a3c565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282540192505081905550610a39565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055505b50565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518082815260200191505060405180910390a3505600a165627a7a72305820de0eb13bb1001a2816eed283d3e1e230fc566c2870da2e2e5f82d77b5a1cf4a50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xB12 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x18160DDD EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x22003F10 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x3C9266E0 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x661956FB EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x9F8A13D7 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xD108177A EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xE53CACBA EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xE7FD9A13 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x431 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x295 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x749 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x43A DUP2 PUSH2 0x54E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x493 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x4A1 DUP2 PUSH2 0x882 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6F5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x8EC DUP2 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xde 0xe 0xb1 EXTCODESIZE 0xb1 STOP BYTE 0x28 AND 0xee 0xd2 DUP4 0xd3 0xe1 0xe2 ADDRESS 0xfc JUMP PUSH13 0x2870DA2E2E5F82D77B5A1CF4A5 STOP 0x29 ",
							"sourceMap": "27:2977:0:-;;;415:63;8:9:-1;5:2;;;30:1;27;20:12;5:2;415:63:0;460:10;450:7;;:20;;;;;;;;;;;;;;;;;;27:2977;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461009e57806322003f10146100c95780633c9266e014610116578063661956fb1461015957806370a08231146101635780639f8a13d7146101ba578063d108177a14610215578063e53cacba14610258578063e7fd9a13146102c4575b600080fd5b3480156100aa57600080fd5b506100b3610311565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b50610114600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061038b565b005b34801561012257600080fd5b50610157600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610431565b005b6101616104a5565b005b34801561016f57600080fd5b506101a4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610502565b6040518082815260200191505060405180910390f35b3480156101c657600080fd5b506101fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054e565b604051808215151515815260200191505060405180910390f35b34801561022157600080fd5b50610256600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105a7565b005b34801561026457600080fd5b5061026d610660565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102b0578082015181840152602081019050610295565b505050509050019250505060405180910390f35b3480156102d057600080fd5b5061030f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610749565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036e57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103e657600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b61043a8161054e565b80156104935750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16155b156104a2576104a181610882565b5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561050057600080fd5b565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561060257600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555050565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106bd57600080fd5b600280548060200260200160405190810160405280929190818152602001828054801561073f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f5575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107a657600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160000160006101000a81548160ff0219169083151502179055508181600101819055506000816002018190555060028390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b3073ffffffffffffffffffffffffffffffffffffffff1631600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015410156109dd576108ec81610a3c565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282540192505081905550610a39565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055505b50565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518082815260200191505060405180910390a3505600a165627a7a72305820de0eb13bb1001a2816eed283d3e1e230fc566c2870da2e2e5f82d77b5a1cf4a50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x18160DDD EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x22003F10 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x3C9266E0 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x661956FB EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x9F8A13D7 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xD108177A EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xE53CACBA EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xE7FD9A13 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x431 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x295 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x749 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x43A DUP2 PUSH2 0x54E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x493 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x4A1 DUP2 PUSH2 0x882 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6F5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x8EC DUP2 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xde 0xe 0xb1 EXTCODESIZE 0xb1 STOP BYTE 0x28 AND 0xee 0xd2 DUP4 0xd3 0xe1 0xe2 ADDRESS 0xfc JUMP PUSH13 0x2870DA2E2E5F82D77B5A1CF4A5 STOP 0x29 ",
							"sourceMap": "27:2977:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1751:94:0;;;;;;;;;;;;;;;;;;;;;;;1314:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1314:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:148;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2710:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:63;;;;;;2877:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2877:118:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1926:109:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1113:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1113:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1455:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1455:105:0;;;;;;;;;;;;;;;;;734:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;734:271:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:94;1803:4;601:7;;;;;;;;;;;587:21;;:10;:21;;;;584:58;;;623:8;;;584:58;1825:4;:12;;;1818:19;;1751:94;:::o;1314:129::-;601:7;;;;;;;;;;;587:21;;:10;:21;;;;584:58;;;623:8;;;584:58;1426:9;1392:14;:24;1407:8;1392:24;;;;;;;;;;;;;;;:31;;:43;;;;1314:129;;:::o;2710:148::-;2759:16;2768:6;2759:8;:16::i;:::-;:48;;;;;2780:14;:22;2795:6;2780:22;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2779:28;2759:48;2756:95;;;2823:16;2832:6;2823:8;:16::i;:::-;2756:95;2710:148;:::o;1676:63::-;601:7;;;;;;;;;;;587:21;;:10;:21;;;;584:58;;;623:8;;;584:58;1676:63::o;2877:118::-;2935:4;2958:14;:21;2973:5;2958:21;;;;;;;;;;;;;;;:29;;;2951:36;;2877:118;;;:::o;1926:109::-;1976:4;1999:14;:21;2014:5;1999:21;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1992:35;;1926:109;;;:::o;1113:111::-;601:7;;;;;;;;;;;587:21;;:10;:21;;;;584:58;;;623:8;;;584:58;1211:5;1177:14;:24;1192:8;1177:24;;;;;;;;;;;;;;;:31;;;:39;;;;;;;;;;;;;;;;;;1113:111;:::o;1455:105::-;1512:9;601:7;;;;;;;;;;;587:21;;:10;:21;;;;584:58;;;623:8;;;584:58;1540:12;1533:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:105;:::o;734:271::-;811:13;601:7;;;;;;;;;;;587:21;;:10;:21;;;;584:58;;;623:8;;;584:58;827:14;:27;842:11;827:27;;;;;;;;;;;;;;;811:43;;884:4;865:9;:16;;;:23;;;;;;;;;;;;;;;;;;918:6;899:9;:16;;:25;;;;955:1;935:9;:17;;:21;;;;967:12;985:11;967:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;967:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:271;;;:::o;2106:353::-;2196:4;:12;;;2162:14;:24;2177:8;2162:24;;;;;;;;;;;;;;;:31;;;:46;2159:293;;;2223:21;2235:8;2223:11;:21::i;:::-;2290:4;2258:14;:24;2273:8;2258:24;;;;;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;2344:14;:24;2359:8;2344:24;;;;;;;;;;;;;;;:31;;;2308:14;:24;2323:8;2308:24;;;;;;;;;;;;;;;:32;;;:67;;;;;;;;;;;2159:293;;;2436:5;2404:14;:24;2419:8;2404:24;;;;;;;;;;;;;;;:29;;;:37;;;;;;;;;;;;;;;;;;2159:293;2106:353;:::o;2471:126::-;2548:8;2528:61;;2537:10;2528:61;;;2557:14;:24;2572:8;2557:24;;;;;;;;;;;;;;;:31;;;2528:61;;;;;;;;;;;;;;;;;;2471:126;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "566800",
								"executionCost": "20866",
								"totalCost": "587666"
							},
							"external": {
								"addEmployee(address,uint256)": "86681",
								"balanceOf(address)": "653",
								"depositInvestment()": "451",
								"isActive(address)": "723",
								"listOutEmployees()": "infinite",
								"removeEmployee(address)": "20968",
								"sendSalary(address)": "45010",
								"totalSupply()": "883",
								"updateSalary(address,uint256)": "20634"
							},
							"internal": {
								"transfer(address)": "infinite",
								"transferLog(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 3004,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "MSTORE"
								},
								{
									"begin": 415,
									"end": 478,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 415,
									"end": 478,
									"name": "POP"
								},
								{
									"begin": 460,
									"end": 470,
									"name": "CALLER"
								},
								{
									"begin": 450,
									"end": 457,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 450,
									"end": 457,
									"name": "DUP1"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "EXP"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "DUP2"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "SLOAD"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "DUP2"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "MUL"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "NOT"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "AND"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "DUP4"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "AND"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "MUL"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "OR"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "SSTORE"
								},
								{
									"begin": 450,
									"end": 470,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 3004,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820de0eb13bb1001a2816eed283d3e1e230fc566c2870da2e2e5f82d77b5a1cf4a50029",
									".code": [
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "SWAP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DIV"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "AND"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "22003F10"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "3C9266E0"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "661956FB"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "9F8A13D7"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "D108177A"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "E53CACBA"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "E7FD9A13"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 3004,
											"name": "REVERT"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "JUMPDEST"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "POP"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "JUMP"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "JUMPDEST"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "MLOAD"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "DUP1"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "DUP3"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "DUP2"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "MSTORE"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "ADD"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "SWAP2"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "POP"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "POP"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "MLOAD"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "DUP1"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "SWAP2"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "SUB"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "SWAP1"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "RETURN"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "DUP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SUB"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "DUP2"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "ADD"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "DUP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "DUP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "AND"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "ADD"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP3"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP2"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "DUP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "ADD"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP3"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP2"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "STOP"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "DUP1"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "SUB"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "DUP2"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "ADD"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "SWAP1"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "DUP1"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "DUP1"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "AND"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "SWAP1"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "ADD"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "SWAP1"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "SWAP3"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "SWAP2"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "SWAP1"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "JUMP"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "STOP"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "JUMPDEST"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "JUMP"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "JUMPDEST"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "STOP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SUB"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP2"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "ADD"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "AND"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "ADD"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP3"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP2"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "JUMP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "MLOAD"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP3"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP2"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "MSTORE"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "ADD"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP2"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "MLOAD"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "DUP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP2"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SUB"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "RETURN"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "JUMPDEST"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SUB"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP2"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "ADD"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "AND"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "ADD"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP3"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP2"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "JUMP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "JUMPDEST"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "MLOAD"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP3"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "ISZERO"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "ISZERO"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "ISZERO"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "ISZERO"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP2"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "MSTORE"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "ADD"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP2"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "MLOAD"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "DUP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP2"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SUB"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "RETURN"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "JUMPDEST"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "DUP1"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "SUB"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "DUP2"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "ADD"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "SWAP1"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "DUP1"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "DUP1"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "AND"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "SWAP1"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "ADD"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "SWAP1"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "SWAP3"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "SWAP2"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "SWAP1"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "JUMP"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "JUMPDEST"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "STOP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "JUMP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP3"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SUB"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP3"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP4"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "MUL"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP4"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP3"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SUB"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "RETURN"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SUB"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "DUP2"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "ADD"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "AND"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "ADD"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP3"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP2"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "ADD"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP3"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP2"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "JUMP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "STOP"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "JUMPDEST"
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "REVERT"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 1825,
											"end": 1829,
											"name": "ADDRESS"
										},
										{
											"begin": 1825,
											"end": 1837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1837,
											"name": "AND"
										},
										{
											"begin": 1825,
											"end": 1837,
											"name": "BALANCE"
										},
										{
											"begin": 1818,
											"end": 1837,
											"name": "SWAP1"
										},
										{
											"begin": 1818,
											"end": 1837,
											"name": "POP"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "SWAP1"
										},
										{
											"begin": 1751,
											"end": 1845,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "REVERT"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 1426,
											"end": 1435,
											"name": "DUP1"
										},
										{
											"begin": 1392,
											"end": 1406,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1415,
											"name": "DUP5"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "AND"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "AND"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "MSTORE"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "MSTORE"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "KECCAK256"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "SSTORE"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP2"
										},
										{
											"begin": 2759,
											"end": 2767,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "JUMPDEST"
										},
										{
											"begin": 2759,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2759,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2759,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2759,
											"end": 2807,
											"name": "JUMPI"
										},
										{
											"begin": 2759,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2801,
											"name": "DUP3"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "AND"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "AND"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "DUP2"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "MSTORE"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "ADD"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "SWAP1"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "DUP2"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "MSTORE"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "ADD"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "KECCAK256"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "EXP"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2759,
											"end": 2807,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2759,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2756,
											"end": 2851,
											"name": "ISZERO"
										},
										{
											"begin": 2756,
											"end": 2851,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2756,
											"end": 2851,
											"name": "JUMPI"
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "DUP2"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "JUMPDEST"
										},
										{
											"begin": 2756,
											"end": 2851,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2756,
											"end": 2851,
											"name": "JUMPDEST"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2710,
											"end": 2858,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "REVERT"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 1676,
											"end": 1739,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "JUMPDEST"
										},
										{
											"begin": 2935,
											"end": 2939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2978,
											"name": "DUP4"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "AND"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "AND"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "DUP2"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "MSTORE"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "ADD"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "DUP2"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "MSTORE"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "ADD"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2979,
											"name": "KECCAK256"
										},
										{
											"begin": 2958,
											"end": 2987,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2958,
											"end": 2987,
											"name": "ADD"
										},
										{
											"begin": 2958,
											"end": 2987,
											"name": "SLOAD"
										},
										{
											"begin": 2951,
											"end": 2987,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2987,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP2"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2995,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "JUMPDEST"
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP4"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "AND"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "AND"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "DUP2"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "MSTORE"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "ADD"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "SWAP1"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "DUP2"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "MSTORE"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "ADD"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "KECCAK256"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "ADD"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "SWAP1"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "SLOAD"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "SWAP1"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "EXP"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "SWAP1"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "DIV"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2027,
											"name": "AND"
										},
										{
											"begin": 1992,
											"end": 2027,
											"name": "SWAP1"
										},
										{
											"begin": 1992,
											"end": 2027,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP2"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "REVERT"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1191,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1200,
											"name": "DUP4"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "AND"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "AND"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "DUP2"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "MSTORE"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "ADD"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "DUP2"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "MSTORE"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "ADD"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1201,
											"name": "KECCAK256"
										},
										{
											"begin": 1177,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1177,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "EXP"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SLOAD"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "MUL"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "NOT"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ISZERO"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ISZERO"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "MUL"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "OR"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SSTORE"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1224,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "REVERT"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SLOAD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "MUL"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "ADD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "MLOAD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "ADD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "MSTORE"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP3"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "MSTORE"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "ADD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP3"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SLOAD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "ISZERO"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "MUL"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP3"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "ADD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "MSTORE"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "KECCAK256"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SLOAD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "EXP"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DIV"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "AND"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "AND"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "MSTORE"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "ADD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "ADD"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "DUP4"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "GT"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1455,
											"end": 1560,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 631,
											"name": "REVERT"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 584,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 827,
											"end": 841,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "DUP5"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "AND"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "AND"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "ADD"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "ADD"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "KECCAK256"
										},
										{
											"begin": 811,
											"end": 854,
											"name": "SWAP1"
										},
										{
											"begin": 811,
											"end": 854,
											"name": "POP"
										},
										{
											"begin": 884,
											"end": 888,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 865,
											"end": 874,
											"name": "DUP2"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "ADD"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "EXP"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "DUP2"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SLOAD"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "DUP2"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "MUL"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "NOT"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "DUP4"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "ISZERO"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "ISZERO"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "MUL"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "OR"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SSTORE"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "POP"
										},
										{
											"begin": 918,
											"end": 924,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "ADD"
										},
										{
											"begin": 899,
											"end": 924,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 924,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 924,
											"name": "SSTORE"
										},
										{
											"begin": 899,
											"end": 924,
											"name": "POP"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 952,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 935,
											"end": 952,
											"name": "ADD"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "POP"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 985,
											"end": 996,
											"name": "DUP4"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "DUP3"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SUB"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "MSTORE"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "KECCAK256"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "ADD"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP2"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP3"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP2"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP2"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "EXP"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "DUP2"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SLOAD"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "DUP2"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "MUL"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "NOT"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "AND"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "DUP4"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "AND"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "MUL"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "OR"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "SSTORE"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "POP"
										},
										{
											"begin": 967,
											"end": 997,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 734,
											"end": 1005,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2106,
											"end": 2459,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2106,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "ADDRESS"
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "AND"
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "BALANCE"
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2185,
											"name": "DUP4"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "AND"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "AND"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "DUP2"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "MSTORE"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "ADD"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "SWAP1"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "DUP2"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "MSTORE"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "ADD"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2186,
											"name": "KECCAK256"
										},
										{
											"begin": 2162,
											"end": 2193,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2162,
											"end": 2193,
											"name": "ADD"
										},
										{
											"begin": 2162,
											"end": 2193,
											"name": "SLOAD"
										},
										{
											"begin": 2162,
											"end": 2208,
											"name": "LT"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "JUMPI"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2235,
											"end": 2243,
											"name": "DUP2"
										},
										{
											"begin": 2223,
											"end": 2234,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "JUMPDEST"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2258,
											"end": 2272,
											"name": "DUP1"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2281,
											"name": "DUP4"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "AND"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "AND"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "DUP2"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "MSTORE"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "ADD"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "SWAP1"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "DUP2"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "MSTORE"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "ADD"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2282,
											"name": "KECCAK256"
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "ADD"
										},
										{
											"begin": 2258,
											"end": 2287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "EXP"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "DUP2"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "SLOAD"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "DUP2"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "MUL"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "NOT"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "AND"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "SWAP1"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "DUP4"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "ISZERO"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "ISZERO"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "MUL"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "OR"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "SWAP1"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "SSTORE"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "POP"
										},
										{
											"begin": 2344,
											"end": 2358,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2367,
											"name": "DUP3"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "AND"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "AND"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP2"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MSTORE"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP1"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP2"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MSTORE"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "KECCAK256"
										},
										{
											"begin": 2344,
											"end": 2375,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2344,
											"end": 2375,
											"name": "ADD"
										},
										{
											"begin": 2344,
											"end": 2375,
											"name": "SLOAD"
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2331,
											"name": "DUP4"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "AND"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "AND"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "DUP2"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "MSTORE"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "ADD"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "SWAP1"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "DUP2"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "MSTORE"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "ADD"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2332,
											"name": "KECCAK256"
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "ADD"
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "DUP3"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "DUP3"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "SLOAD"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "ADD"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "SWAP3"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "DUP2"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "SWAP1"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "SSTORE"
										},
										{
											"begin": 2308,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "JUMP"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2418,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2427,
											"name": "DUP4"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "AND"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "AND"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "MSTORE"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "MSTORE"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "KECCAK256"
										},
										{
											"begin": 2404,
											"end": 2433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2433,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2433,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "EXP"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "SLOAD"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "MUL"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "NOT"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "AND"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "DUP4"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "ISZERO"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "ISZERO"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "MUL"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "OR"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "SSTORE"
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2159,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2106,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2106,
											"end": 2459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2471,
											"end": 2597,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2471,
											"end": 2597,
											"name": "JUMPDEST"
										},
										{
											"begin": 2548,
											"end": 2556,
											"name": "DUP1"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "AND"
										},
										{
											"begin": 2537,
											"end": 2547,
											"name": "CALLER"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "AND"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2580,
											"name": "DUP6"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "AND"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "AND"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "DUP2"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "MSTORE"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "ADD"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "SWAP1"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "DUP2"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "MSTORE"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "ADD"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2581,
											"name": "KECCAK256"
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "ADD"
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "SLOAD"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "MLOAD"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "DUP1"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "DUP3"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "DUP2"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "MSTORE"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "ADD"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "SWAP2"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "MLOAD"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "DUP1"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "SWAP2"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "SUB"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "SWAP1"
										},
										{
											"begin": 2528,
											"end": 2589,
											"name": "LOG3"
										},
										{
											"begin": 2471,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2597,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addEmployee(address,uint256)": "e7fd9a13",
							"balanceOf(address)": "70a08231",
							"depositInvestment()": "661956fb",
							"isActive(address)": "9f8a13d7",
							"listOutEmployees()": "e53cacba",
							"removeEmployee(address)": "d108177a",
							"sendSalary(address)": "3c9266e0",
							"totalSupply()": "18160ddd",
							"updateSalary(address,uint256)": "22003f10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"newSalary\",\"type\":\"uint256\"}],\"name\":\"updateSalary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"sendSalary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositInvestment\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"empAd\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"check\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeEmployee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"listOutEmployees\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newEmployee\",\"type\":\"address\"},{\"name\":\"salary\",\"type\":\"uint256\"}],\"name\":\"addEmployee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"blockchain/payrollSystem.sol\":\"payrollSystem\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"blockchain/payrollSystem.sol\":{\"keccak256\":\"0x0e55eb1f724a8c83f84e520988c7e8e349df278f2c8caba7c1d5609bf0143972\",\"urls\":[\"bzzr://d0ef4197f29002cd23ab110fb2c2528042795e10beb607f9fb0f90d36b8e4e48\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:20:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function payrollSystem(){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 478,
					"file": "blockchain/payrollSystem.sol",
					"start": 415
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:34:9: Warning: Use of the \"var\" keyword is deprecated.\n        var _employee = employeeMapper[newEmployee];\r\n        ^-----------^\n",
				"message": "Use of the \"var\" keyword is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 824,
					"file": "blockchain/payrollSystem.sol",
					"start": 811
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:61:15: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n       return this.balance;\r\n              ^----------^\n",
				"message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1837,
					"file": "blockchain/payrollSystem.sol",
					"start": 1825
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:72:45: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n       if(employeeMapper[_address].salary < this.balance){\r\n                                            ^----------^\n",
				"message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2208,
					"file": "blockchain/payrollSystem.sol",
					"start": 2196
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:82:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender,_address,employeeMapper[_address].salary);\r\n        ^-----------------------------------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2589,
					"file": "blockchain/payrollSystem.sol",
					"start": 2528
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:20:5: Warning: No visibility specified. Defaulting to \"public\". \n    function payrollSystem(){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 478,
					"file": "blockchain/payrollSystem.sol",
					"start": 415
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:33:5: Warning: No visibility specified. Defaulting to \"public\". \n    function addEmployee(address newEmployee, uint salary) onlyCompany{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 1005,
					"file": "blockchain/payrollSystem.sol",
					"start": 734
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:42:5: Warning: No visibility specified. Defaulting to \"public\". \n    function removeEmployee(address _address) onlyCompany{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 1224,
					"file": "blockchain/payrollSystem.sol",
					"start": 1113
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:47:5: Warning: No visibility specified. Defaulting to \"public\". \n    function updateSalary(address _address, uint newSalary) onlyCompany{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 1443,
					"file": "blockchain/payrollSystem.sol",
					"start": 1314
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:51:5: Warning: No visibility specified. Defaulting to \"public\". \n    function listOutEmployees() onlyCompany constant returns(address[]){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 1560,
					"file": "blockchain/payrollSystem.sol",
					"start": 1455
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:56:5: Warning: No visibility specified. Defaulting to \"public\". \n    function depositInvestment() onlyCompany payable{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 1739,
					"file": "blockchain/payrollSystem.sol",
					"start": 1676
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:60:5: Warning: No visibility specified. Defaulting to \"public\". \n    function totalSupply() onlyCompany constant returns(uint){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 1845,
					"file": "blockchain/payrollSystem.sol",
					"start": 1751
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:65:5: Warning: No visibility specified. Defaulting to \"public\". \n    function isActive(address check) constant returns(bool){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 2035,
					"file": "blockchain/payrollSystem.sol",
					"start": 1926
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "blockchain/payrollSystem.sol:86:5: Warning: No visibility specified. Defaulting to \"public\". \n    function sendSalary(address sendTo){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 2858,
					"file": "blockchain/payrollSystem.sol",
					"start": 2710
				},
				"type": "Warning"
			}
		],
		"sources": {
			"blockchain/payrollSystem.sol": {
				"ast": {
					"absolutePath": "blockchain/payrollSystem.sol",
					"exportedSymbols": {
						"payrollSystem": [
							256
						]
					},
					"id": 257,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 256,
							"linearizedBaseContracts": [
								256
							],
							"name": "payrollSystem",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "company",
									"nodeType": "VariableDeclaration",
									"scope": 256,
									"src": "62:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "62:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "payrollSystem.employee",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 5,
											"name": "active",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "117:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "117:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "paid",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "139:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "139:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "salary",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "159:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "159:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"name": "balance",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "181:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 10,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "181:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "employee",
									"nodeType": "StructDefinition",
									"scope": 256,
									"src": "90:111:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 20,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "228:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "250:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "269:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "227:54:0"
									},
									"src": "213:69:0"
								},
								{
									"constant": false,
									"id": 24,
									"name": "employeeMapper",
									"nodeType": "VariableDeclaration",
									"scope": 256,
									"src": "294:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
										"typeString": "mapping(address => struct payrollSystem.employee)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "302:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "294:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
											"typeString": "mapping(address => struct payrollSystem.employee)"
										},
										"valueType": {
											"contractScope": null,
											"id": 22,
											"name": "employee",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 12,
											"src": "313:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_employee_$12_storage_ptr",
												"typeString": "struct payrollSystem.employee"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 27,
									"name": "employeeList",
									"nodeType": "VariableDeclaration",
									"scope": 256,
									"src": "345:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "345:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 26,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "345:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "439:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 30,
														"name": "company",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 31,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "460:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "460:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "450:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "450:20:0"
											}
										]
									},
									"documentation": null,
									"id": 36,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "payrollSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:0:0"
									},
									"scope": 256,
									"src": "415:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "574:87:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 38,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "587:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "587:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 40,
														"name": "company",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "587:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 46,
												"nodeType": "IfStatement",
												"src": "584:58:0",
												"trueBody": {
													"id": 45,
													"nodeType": "Block",
													"src": "609:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 42,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		276,
																		277
																	],
																	"referencedDeclaration": 276,
																	"src": "623:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "623:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 44,
															"nodeType": "ExpressionStatement",
															"src": "623:8:0"
														}
													]
												}
											},
											{
												"id": 47,
												"nodeType": "PlaceholderStatement",
												"src": "652:1:0"
											}
										]
									},
									"documentation": null,
									"id": 49,
									"name": "onlyCompany",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:2:0"
									},
									"src": "552:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "800:205:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "_employee",
														"nodeType": "VariableDeclaration",
														"scope": 88,
														"src": "811:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_employee_$12_storage_ptr",
															"typeString": "struct payrollSystem.employee"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 59,
														"name": "employeeMapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "827:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
															"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
														}
													},
													"id": 61,
													"indexExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "newEmployee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "842:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "827:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_employee_$12_storage",
														"typeString": "struct payrollSystem.employee storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "811:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 63,
															"name": "_employee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "865:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_employee_$12_storage_ptr",
																"typeString": "struct payrollSystem.employee storage pointer"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "865:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "884:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "865:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "865:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 69,
															"name": "_employee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "899:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_employee_$12_storage_ptr",
																"typeString": "struct payrollSystem.employee storage pointer"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salary",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "899:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "salary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "918:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "899:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "899:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 75,
															"name": "_employee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "935:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_employee_$12_storage_ptr",
																"typeString": "struct payrollSystem.employee storage pointer"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "935:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "955:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "935:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "935:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 84,
															"name": "newEmployee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "985:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 81,
															"name": "employeeList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "967:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "967:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "967:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "967:30:0"
											}
										]
									},
									"documentation": null,
									"id": 88,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 56,
											"modifierName": {
												"argumentTypes": null,
												"id": 55,
												"name": "onlyCompany",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "789:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "789:11:0"
										}
									],
									"name": "addEmployee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "newEmployee",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "755:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"name": "salary",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "776:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "776:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "754:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:0"
									},
									"scope": 256,
									"src": "734:271:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1166:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 95,
																"name": "employeeMapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "1177:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																	"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																}
															},
															"id": 97,
															"indexExpression": {
																"argumentTypes": null,
																"id": 96,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "1192:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1177:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_employee_$12_storage",
																"typeString": "struct payrollSystem.employee storage ref"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1177:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1211:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1177:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1177:39:0"
											}
										]
									},
									"documentation": null,
									"id": 103,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 93,
											"modifierName": {
												"argumentTypes": null,
												"id": 92,
												"name": "onlyCompany",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "1155:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1155:11:0"
										}
									],
									"name": "removeEmployee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1137:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1136:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 256,
									"src": "1113:111:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1381:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 112,
																"name": "employeeMapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "1392:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																	"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																}
															},
															"id": 114,
															"indexExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1407:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1392:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_employee_$12_storage",
																"typeString": "struct payrollSystem.employee storage ref"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salary",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "1392:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 116,
														"name": "newSalary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1426:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1392:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1392:43:0"
											}
										]
									},
									"documentation": null,
									"id": 120,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 110,
											"modifierName": {
												"argumentTypes": null,
												"id": 109,
												"name": "onlyCompany",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "1370:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1370:11:0"
										}
									],
									"name": "updateSalary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1336:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"name": "newSalary",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1354:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1335:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:0"
									},
									"scope": 256,
									"src": "1314:129:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1522:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 128,
													"name": "employeeList",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1540:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 127,
												"id": 129,
												"nodeType": "Return",
												"src": "1533:19:0"
											}
										]
									},
									"documentation": null,
									"id": 131,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [
										{
											"arguments": null,
											"id": 123,
											"modifierName": {
												"argumentTypes": null,
												"id": 122,
												"name": "onlyCompany",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "1483:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1483:11:0"
										}
									],
									"name": "listOutEmployees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1512:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 124,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 125,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1512:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1511:11:0"
									},
									"scope": 256,
									"src": "1455:105:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1724:15:0",
										"statements": []
									},
									"documentation": null,
									"id": 137,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 134,
											"modifierName": {
												"argumentTypes": null,
												"id": 133,
												"name": "onlyCompany",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "1705:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:11:0"
										}
									],
									"name": "depositInvestment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1702:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1724:0:0"
									},
									"scope": 256,
									"src": "1676:63:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1808:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 144,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1825:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_payrollSystem_$256",
															"typeString": "contract payrollSystem"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1825:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 143,
												"id": 146,
												"nodeType": "Return",
												"src": "1818:19:0"
											}
										]
									},
									"documentation": null,
									"id": 148,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [
										{
											"arguments": null,
											"id": 140,
											"modifierName": {
												"argumentTypes": null,
												"id": 139,
												"name": "onlyCompany",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "1774:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1774:11:0"
										}
									],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1803:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1803:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1802:6:0"
									},
									"scope": 256,
									"src": "1751:94:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1981:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 155,
															"name": "employeeMapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1999:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
															}
														},
														"id": 157,
														"indexExpression": {
															"argumentTypes": null,
															"id": 156,
															"name": "check",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2014:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1999:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_employee_$12_storage",
															"typeString": "struct payrollSystem.employee storage ref"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "active",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "1999:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 154,
												"id": 159,
												"nodeType": "Return",
												"src": "1992:35:0"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isActive",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"name": "check",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1944:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1943:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1976:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1975:6:0"
									},
									"scope": 256,
									"src": "1926:109:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "2149:310:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "employeeMapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2162:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																	"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																}
															},
															"id": 168,
															"indexExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "2177:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2162:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_employee_$12_storage",
																"typeString": "struct payrollSystem.employee storage ref"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "salary",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "2162:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 170,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "2196:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_payrollSystem_$256",
																"typeString": "contract payrollSystem"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2196:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2162:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "2390:62:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 195,
																			"name": "employeeMapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "2404:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																				"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																			}
																		},
																		"id": 197,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 196,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "2419:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2404:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_employee_$12_storage",
																			"typeString": "struct payrollSystem.employee storage ref"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "paid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "2404:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2436:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2404:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "2404:37:0"
														}
													]
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "2159:293:0",
												"trueBody": {
													"id": 194,
													"nodeType": "Block",
													"src": "2209:177:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 174,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "2235:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 173,
																	"name": "transferLog",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "2223:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2223:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 176,
															"nodeType": "ExpressionStatement",
															"src": "2223:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 177,
																			"name": "employeeMapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "2258:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																				"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																			}
																		},
																		"id": 179,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 178,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "2273:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2258:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_employee_$12_storage",
																			"typeString": "struct payrollSystem.employee storage ref"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "paid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "2258:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2290:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2258:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 183,
															"nodeType": "ExpressionStatement",
															"src": "2258:36:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 184,
																			"name": "employeeMapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "2308:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																				"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																			}
																		},
																		"id": 186,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 185,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "2323:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2308:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_employee_$12_storage",
																			"typeString": "struct payrollSystem.employee storage ref"
																		}
																	},
																	"id": 187,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "2308:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 188,
																			"name": "employeeMapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "2344:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																				"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																			}
																		},
																		"id": 190,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 189,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "2359:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2344:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_employee_$12_storage",
																			"typeString": "struct payrollSystem.employee storage ref"
																		}
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "salary",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "2344:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2308:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 193,
															"nodeType": "ExpressionStatement",
															"src": "2308:67:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 205,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2124:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2123:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2149:0:0"
									},
									"scope": 256,
									"src": "2106:353:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2517:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "2537:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2537:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2548:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 214,
																	"name": "employeeMapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "2557:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																		"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																	}
																},
																"id": 216,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 215,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "2572:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2557:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_employee_$12_storage",
																	"typeString": "struct payrollSystem.employee storage ref"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "salary",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "2557:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "2528:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2528:61:0"
											}
										]
									},
									"documentation": null,
									"id": 221,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferLog",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2492:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2491:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2517:0:0"
									},
									"scope": 256,
									"src": "2471:126:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2745:113:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 227,
																"name": "sendTo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "2768:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 226,
															"name": "isActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2759:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2759:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2779:28:0",
														"subExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 229,
																	"name": "employeeMapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "2780:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																		"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
																	}
																},
																"id": 231,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 230,
																	"name": "sendTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "2795:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2780:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_employee_$12_storage",
																	"typeString": "struct payrollSystem.employee storage ref"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "paid",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "2780:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2759:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 240,
												"nodeType": "IfStatement",
												"src": "2756:95:0",
												"trueBody": {
													"id": 239,
													"nodeType": "Block",
													"src": "2808:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 236,
																		"name": "sendTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "2832:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 235,
																	"name": "transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "2823:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2823:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "2823:16:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 242,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "sendSalary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"name": "sendTo",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2730:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2729:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:0"
									},
									"scope": 256,
									"src": "2710:148:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2940:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 249,
															"name": "employeeMapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2958:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_employee_$12_storage_$",
																"typeString": "mapping(address => struct payrollSystem.employee storage ref)"
															}
														},
														"id": 251,
														"indexExpression": {
															"argumentTypes": null,
															"id": 250,
															"name": "empAd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2958:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_employee_$12_storage",
															"typeString": "struct payrollSystem.employee storage ref"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 11,
													"src": "2958:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 253,
												"nodeType": "Return",
												"src": "2951:36:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"name": "empAd",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2895:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2935:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2934:6:0"
									},
									"scope": 256,
									"src": "2877:118:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 257,
							"src": "27:2977:0"
						}
					],
					"src": "0:3004:0"
				},
				"id": 0
			}
		}
	}
}