{
	"id": "63ca8024528668f8da54d76735501c0a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"blockchain/OneTimeChannel.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\nimport \"blockchain/ECRecovery.sol\";\r\ncontract OneTimeChannel {\r\n\r\n    address channelOpener;\r\n    address remainingBalanceWallet;\r\n    address paymentReceiverWallet;\r\n    uint expirationDate;\r\n    mapping (bytes32 => address) signatures;\r\n    bool isClosed;\r\n    \r\n    constructor (address _opener, address _remainingBalanceWallet, address _paymentReceiverWallet, \r\n                uint _timeout) \r\n    public payable {\r\n        channelOpener = _opener;\r\n        remainingBalanceWallet = _remainingBalanceWallet;\r\n        paymentReceiverWallet = _paymentReceiverWallet;\r\n        expirationDate = now + _timeout;\r\n        isClosed = false;\r\n    }\r\n    \r\n    // SEE: https://github.com/ethereum/solidity/blob/develop/docs/solidity-by-example.rst#micropayment-channel \r\n    // v used to check which account's private key was used to sign the message, and the transaction's sender\r\n    function closeChannel(bytes32 _hash, bytes _sig, uint value) \r\n    public {\r\n        // get signer from signature\r\n        address signer = getSignerFromHashAndSig(_hash, _sig);\r\n        \r\n        // signature is invalid, throw\r\n        require(signer == channelOpener, \"Message can only be signer by the channel opener.\");\r\n\r\n        // was \"proof = sha3(this, value);\"\r\n        bytes32 proof = keccak256(abi.encodePacked(this, value));\r\n\r\n        // signature is valid but doesn't match the data provided\r\n        require(proof == _hash, \"Signature was correct but the value being withdraw does not match that specified by the signer.\");\r\n        \r\n        require(value <= address(this).balance, \"Requested value is greater than this channel's balance\");\r\n\r\n        // Guard against reentrancy\r\n        require(isClosed == false, \"Channel is already closed\");\r\n        isClosed = true;\r\n\r\n        paymentReceiverWallet.transfer(value);\r\n        selfdestruct(remainingBalanceWallet);\r\n    }\r\n    \r\n    function timeOutChannel() \r\n    public {\r\n        require (expirationDate <= now, \"Channel timeout not yet elapsed\");\r\n        \r\n        selfdestruct(remainingBalanceWallet);\r\n    }\r\n\r\n    function getChannelParties(bytes32 _hash, bytes _sig) \r\n    public view\r\n    returns (address,address,address,address) {\r\n        return (getSignerFromHashAndSig(_hash,_sig),channelOpener,paymentReceiverWallet,remainingBalanceWallet);\r\n    }\r\n    \r\n    function getSignerFromHashAndSig(bytes32 _hash, bytes _sig) \r\n    private pure\r\n    returns (address) {\r\n        return ECRecovery.recover(_hash,_sig);\r\n    }\r\n}"
			},
			"blockchain/ECRecovery.sol": {
				"content": "pragma solidity ^0.4.21;\r\n\r\n\r\n/**\r\n * @title Eliptic curve signature operations\r\n *\r\n * @dev Based on https://gist.github.com/axic/5b33912c6f61ae6fd96d6c4a47afde6d\r\n *\r\n * TODO Remove this library once solidity supports passing a signature to ecrecover.\r\n * See https://github.com/ethereum/solidity/issues/864\r\n *\r\n */\r\n\r\nlibrary ECRecovery {\r\n\r\n  /**\r\n   * @dev Recover signer address from a message by using their signature\r\n   * @param hash bytes32 message, the hash is the signed message. What is recovered is the signer address.\r\n   * @param sig bytes signature, the signature is generated using web3.eth.sign()\r\n   */\r\n  function recover(bytes32 hash, bytes sig)\r\n    internal\r\n    pure\r\n    returns (address)\r\n  {\r\n    bytes32 r;\r\n    bytes32 s;\r\n    uint8 v;\r\n\r\n    // Check the signature length\r\n    if (sig.length != 65) {\r\n      return (address(0));\r\n    }\r\n\r\n    // Divide the signature in r, s and v variables\r\n    // ecrecover takes the signature parameters, and the only way to get them\r\n    // currently is to use assembly.\r\n    // solium-disable-next-line security/no-inline-assembly\r\n    assembly {\r\n      r := mload(add(sig, 32))\r\n      s := mload(add(sig, 64))\r\n      v := byte(0, mload(add(sig, 96)))\r\n    }\r\n\r\n    // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\r\n    if (v < 27) {\r\n      v += 27;\r\n    }\r\n\r\n    // If the version is correct return the signer address\r\n    if (v != 27 && v != 28) {\r\n      return (address(0));\r\n    } else {\r\n      // solium-disable-next-line arg-overflow\r\n      return ecrecover(hash, v, r, s);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * toEthSignedMessageHash\r\n   * @dev prefix a bytes32 value with \"\\x19Ethereum Signed Message:\"\r\n   * @dev and hash the result\r\n   */\r\n  function toEthSignedMessageHash(bytes32 hash)\r\n    internal\r\n    pure\r\n    returns (bytes32)\r\n  {\r\n    // 32 is the length in bytes of hash,\r\n    // enforced by the type signature above\r\n    return keccak256(\r\n      \"\\x19Ethereum Signed Message:\\n32\",\r\n      hash\r\n    );\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"blockchain/ECRecovery.sol": {
				"ECRecovery": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "Eliptic curve signature operations\r "
					},
					"evm": {
						"assembly": "    /* \"blockchain/ECRecovery.sol\":322:2024  library ECRecovery {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"blockchain/ECRecovery.sol\":322:2024  library ECRecovery {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820621d25de822afdc06c391761aa1c78740b74276891b8b027e53a2204ffe0daa30029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820621d25de822afdc06c391761aa1c78740b74276891b8b027e53a2204ffe0daa30029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH3 0x1D25DE DUP3 0x2a REVERT 0xc0 PUSH13 0x391761AA1C78740B74276891B8 0xb0 0x27 0xe5 GASPRICE 0x22 DIV SELFDESTRUCT 0xe0 0xda LOG3 STOP 0x29 ",
							"sourceMap": "322:1702:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820621d25de822afdc06c391761aa1c78740b74276891b8b027e53a2204ffe0daa30029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH3 0x1D25DE DUP3 0x2a REVERT 0xc0 PUSH13 0x391761AA1C78740B74276891B8 0xb0 0x27 0xe5 GASPRICE 0x22 DIV SELFDESTRUCT 0xe0 0xda LOG3 STOP 0x29 ",
							"sourceMap": "322:1702:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"recover(bytes32,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 322,
									"end": 2024,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 322,
									"end": 2024,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820621d25de822afdc06c391761aa1c78740b74276891b8b027e53a2204ffe0daa30029",
									".code": [
										{
											"begin": 322,
											"end": 2024,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "ADDRESS"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "EQ"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "MSTORE"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "DUP1"
										},
										{
											"begin": 322,
											"end": 2024,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"Eliptic curve signature operations\\r \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"blockchain/ECRecovery.sol\":\"ECRecovery\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"blockchain/ECRecovery.sol\":{\"keccak256\":\"0xbc0f1a5ae564e59820c27ec3e2dada4f3e9783d3c3ac8f99c216a6adffacad24\",\"urls\":[\"bzzr://d63fa50c74c101b84a3b836d86a74e4dae95901a25f93a07dab3009ced367b79\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"blockchain/OneTimeChannel.sol": {
				"OneTimeChannel": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"name": "_sig",
									"type": "bytes"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "closeChannel",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "timeOutChannel",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "getChannelParties",
							"outputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_opener",
									"type": "address"
								},
								{
									"name": "_remainingBalanceWallet",
									"type": "address"
								},
								{
									"name": "_paymentReceiverWallet",
									"type": "address"
								},
								{
									"name": "_timeout",
									"type": "uint256"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"blockchain/OneTimeChannel.sol\":65:2517  contract OneTimeChannel {\r... */\n  mstore(0x40, 0x80)\n    /* \"blockchain/OneTimeChannel.sol\":297:673  constructor (address _opener, address _remainingBalanceWallet, address _paymentReceiverWallet, \r... */\n  mload(0x40)\n  0x80\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"blockchain/OneTimeChannel.sol\":473:480  _opener */\n  dup4\n    /* \"blockchain/OneTimeChannel.sol\":457:470  channelOpener */\n  0x0\n  dup1\n    /* \"blockchain/OneTimeChannel.sol\":457:480  channelOpener = _opener */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockchain/OneTimeChannel.sol\":516:539  _remainingBalanceWallet */\n  dup3\n    /* \"blockchain/OneTimeChannel.sol\":491:513  remainingBalanceWallet */\n  0x1\n  0x0\n    /* \"blockchain/OneTimeChannel.sol\":491:539  remainingBalanceWallet = _remainingBalanceWallet */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockchain/OneTimeChannel.sol\":574:596  _paymentReceiverWallet */\n  dup2\n    /* \"blockchain/OneTimeChannel.sol\":550:571  paymentReceiverWallet */\n  0x2\n  0x0\n    /* \"blockchain/OneTimeChannel.sol\":550:596  paymentReceiverWallet = _paymentReceiverWallet */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockchain/OneTimeChannel.sol\":630:638  _timeout */\n  dup1\n    /* \"blockchain/OneTimeChannel.sol\":624:627  now */\n  timestamp\n    /* \"blockchain/OneTimeChannel.sol\":624:638  now + _timeout */\n  add\n    /* \"blockchain/OneTimeChannel.sol\":607:621  expirationDate */\n  0x3\n    /* \"blockchain/OneTimeChannel.sol\":607:638  expirationDate = now + _timeout */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"blockchain/OneTimeChannel.sol\":660:665  false */\n  0x0\n    /* \"blockchain/OneTimeChannel.sol\":649:657  isClosed */\n  0x5\n  0x0\n    /* \"blockchain/OneTimeChannel.sol\":649:665  isClosed = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockchain/OneTimeChannel.sol\":297:673  constructor (address _opener, address _remainingBalanceWallet, address _paymentReceiverWallet, \r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"blockchain/OneTimeChannel.sol\":65:2517  contract OneTimeChannel {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"blockchain/OneTimeChannel.sol\":65:2517  contract OneTimeChannel {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x5b73a86d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x71a97d13\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbb3ee2fb\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"blockchain/OneTimeChannel.sol\":910:1902  function closeChannel(bytes32 _hash, bytes _sig, uint value) \r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"blockchain/OneTimeChannel.sol\":910:1902  function closeChannel(bytes32 _hash, bytes _sig, uint value) \r... */\n      pop\n      tag_6\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"blockchain/OneTimeChannel.sol\":1914:2095  function timeOutChannel() \r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"blockchain/OneTimeChannel.sol\":1914:2095  function timeOutChannel() \r... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      stop\n        /* \"blockchain/OneTimeChannel.sol\":2103:2344  function getChannelParties(bytes32 _hash, bytes _sig) \r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"blockchain/OneTimeChannel.sol\":2103:2344  function getChannelParties(bytes32 _hash, bytes _sig) \r... */\n      pop\n      tag_12\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockchain/OneTimeChannel.sol\":910:1902  function closeChannel(bytes32 _hash, bytes _sig, uint value) \r... */\n    tag_7:\n        /* \"blockchain/OneTimeChannel.sol\":1033:1047  address signer */\n      0x0\n        /* \"blockchain/OneTimeChannel.sol\":1290:1303  bytes32 proof */\n      dup1\n        /* \"blockchain/OneTimeChannel.sol\":1050:1086  getSignerFromHashAndSig(_hash, _sig) */\n      tag_15\n        /* \"blockchain/OneTimeChannel.sol\":1074:1079  _hash */\n      dup6\n        /* \"blockchain/OneTimeChannel.sol\":1081:1085  _sig */\n      dup6\n        /* \"blockchain/OneTimeChannel.sol\":1050:1073  getSignerFromHashAndSig */\n      tag_16\n        /* \"blockchain/OneTimeChannel.sol\":1050:1086  getSignerFromHashAndSig(_hash, _sig) */\n      jump\t// in\n    tag_15:\n        /* \"blockchain/OneTimeChannel.sol\":1033:1086  address signer = getSignerFromHashAndSig(_hash, _sig) */\n      swap2\n      pop\n        /* \"blockchain/OneTimeChannel.sol\":1165:1178  channelOpener */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":1155:1178  signer == channelOpener */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":1155:1161  signer */\n      dup3\n        /* \"blockchain/OneTimeChannel.sol\":1155:1178  signer == channelOpener */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"blockchain/OneTimeChannel.sol\":1147:1232  require(signer == channelOpener, \"Message can only be signer by the channel opener.\") */\n      iszero\n      iszero\n      tag_17\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d6573736167652063616e206f6e6c79206265207369676e6572206279207468\n      dup2\n      mstore\n      0x20\n      add\n      0x65206368616e6e656c206f70656e65722e000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"blockchain/OneTimeChannel.sol\":1333:1337  this */\n      address\n        /* \"blockchain/OneTimeChannel.sol\":1339:1344  value */\n      dup4\n        /* \"blockchain/OneTimeChannel.sol\":1316:1345  abi.encodePacked(this, value) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"blockchain/OneTimeChannel.sol\":1316:1345  abi.encodePacked(this, value) */\n      swap1\n      0x40\n      mstore\n        /* \"blockchain/OneTimeChannel.sol\":1306:1346  keccak256(abi.encodePacked(this, value)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_18:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_18)\n    tag_19:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"blockchain/OneTimeChannel.sol\":1306:1346  keccak256(abi.encodePacked(this, value)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"blockchain/OneTimeChannel.sol\":1290:1346  bytes32 proof = keccak256(abi.encodePacked(this, value)) */\n      swap1\n      pop\n        /* \"blockchain/OneTimeChannel.sol\":1443:1448  _hash */\n      dup5\n        /* \"blockchain/OneTimeChannel.sol\":1434:1448  proof == _hash */\n      not(0x0)\n      and\n        /* \"blockchain/OneTimeChannel.sol\":1434:1439  proof */\n      dup2\n        /* \"blockchain/OneTimeChannel.sol\":1434:1448  proof == _hash */\n      not(0x0)\n      and\n      eq\n        /* \"blockchain/OneTimeChannel.sol\":1426:1548  require(proof == _hash, \"Signature was correct but the value being withdraw does not match that specified by the signer.\") */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x5f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5369676e61747572652077617320636f72726563742062757420746865207661\n      dup2\n      mstore\n      0x20\n      add\n      0x6c7565206265696e6720776974686472617720646f6573206e6f74206d617463\n      dup2\n      mstore\n      0x20\n      add\n      0x6820746861742073706563696669656420627920746865207369676e65722e00\n      dup2\n      mstore\n      pop\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"blockchain/OneTimeChannel.sol\":1594:1598  this */\n      address\n        /* \"blockchain/OneTimeChannel.sol\":1586:1607  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"blockchain/OneTimeChannel.sol\":1577:1582  value */\n      dup4\n        /* \"blockchain/OneTimeChannel.sol\":1577:1607  value <= address(this).balance */\n      gt\n      iszero\n        /* \"blockchain/OneTimeChannel.sol\":1569:1666  require(value <= address(this).balance, \"Requested value is greater than this channel's balance\") */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265717565737465642076616c75652069732067726561746572207468616e20\n      dup2\n      mstore\n      0x20\n      add\n      0x74686973206368616e6e656c27732062616c616e636500000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"blockchain/OneTimeChannel.sol\":1736:1741  false */\n      0x0\n        /* \"blockchain/OneTimeChannel.sol\":1724:1741  isClosed == false */\n      iszero\n      iszero\n        /* \"blockchain/OneTimeChannel.sol\":1724:1732  isClosed */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":1724:1741  isClosed == false */\n      iszero\n      iszero\n      eq\n        /* \"blockchain/OneTimeChannel.sol\":1716:1771  require(isClosed == false, \"Channel is already closed\") */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4368616e6e656c20697320616c726561647920636c6f73656400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"blockchain/OneTimeChannel.sol\":1793:1797  true */\n      0x1\n        /* \"blockchain/OneTimeChannel.sol\":1782:1790  isClosed */\n      0x5\n      0x0\n        /* \"blockchain/OneTimeChannel.sol\":1782:1797  isClosed = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockchain/OneTimeChannel.sol\":1810:1831  paymentReceiverWallet */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":1810:1840  paymentReceiverWallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":1810:1847  paymentReceiverWallet.transfer(value) */\n      0x8fc\n        /* \"blockchain/OneTimeChannel.sol\":1841:1846  value */\n      dup5\n        /* \"blockchain/OneTimeChannel.sol\":1810:1847  paymentReceiverWallet.transfer(value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"blockchain/OneTimeChannel.sol\":1810:1847  paymentReceiverWallet.transfer(value) */\n      pop\n        /* \"blockchain/OneTimeChannel.sol\":1871:1893  remainingBalanceWallet */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":1858:1894  selfdestruct(remainingBalanceWallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"blockchain/OneTimeChannel.sol\":1914:2095  function timeOutChannel() \r... */\n    tag_10:\n        /* \"blockchain/OneTimeChannel.sol\":1991:1994  now */\n      timestamp\n        /* \"blockchain/OneTimeChannel.sol\":1973:1987  expirationDate */\n      sload(0x3)\n        /* \"blockchain/OneTimeChannel.sol\":1973:1994  expirationDate <= now */\n      gt\n      iszero\n        /* \"blockchain/OneTimeChannel.sol\":1964:2030  require (expirationDate <= now, \"Channel timeout not yet elapsed\") */\n      iszero\n      iszero\n      tag_26\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4368616e6e656c2074696d656f7574206e6f742079657420656c617073656400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"blockchain/OneTimeChannel.sol\":2064:2086  remainingBalanceWallet */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":2051:2087  selfdestruct(remainingBalanceWallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"blockchain/OneTimeChannel.sol\":2103:2344  function getChannelParties(bytes32 _hash, bytes _sig) \r... */\n    tag_13:\n        /* \"blockchain/OneTimeChannel.sol\":2189:2196  address */\n      0x0\n        /* \"blockchain/OneTimeChannel.sol\":2197:2204  address */\n      dup1\n        /* \"blockchain/OneTimeChannel.sol\":2205:2212  address */\n      0x0\n        /* \"blockchain/OneTimeChannel.sol\":2213:2220  address */\n      dup1\n        /* \"blockchain/OneTimeChannel.sol\":2241:2276  getSignerFromHashAndSig(_hash,_sig) */\n      tag_28\n        /* \"blockchain/OneTimeChannel.sol\":2265:2270  _hash */\n      dup7\n        /* \"blockchain/OneTimeChannel.sol\":2271:2275  _sig */\n      dup7\n        /* \"blockchain/OneTimeChannel.sol\":2241:2264  getSignerFromHashAndSig */\n      tag_16\n        /* \"blockchain/OneTimeChannel.sol\":2241:2276  getSignerFromHashAndSig(_hash,_sig) */\n      jump\t// in\n    tag_28:\n        /* \"blockchain/OneTimeChannel.sol\":2277:2290  channelOpener */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":2291:2312  paymentReceiverWallet */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":2313:2335  remainingBalanceWallet */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockchain/OneTimeChannel.sol\":2233:2336  return (getSignerFromHashAndSig(_hash,_sig),channelOpener,paymentReceiverWallet,remainingBalanceWallet) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"blockchain/OneTimeChannel.sol\":2103:2344  function getChannelParties(bytes32 _hash, bytes _sig) \r... */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"blockchain/OneTimeChannel.sol\":2356:2514  function getSignerFromHashAndSig(bytes32 _hash, bytes _sig) \r... */\n    tag_16:\n        /* \"blockchain/OneTimeChannel.sol\":2449:2456  address */\n      0x0\n        /* \"blockchain/OneTimeChannel.sol\":2476:2506  ECRecovery.recover(_hash,_sig) */\n      tag_30\n        /* \"blockchain/OneTimeChannel.sol\":2495:2500  _hash */\n      dup4\n        /* \"blockchain/OneTimeChannel.sol\":2501:2505  _sig */\n      dup4\n        /* \"blockchain/OneTimeChannel.sol\":2476:2494  ECRecovery.recover */\n      tag_31\n        /* \"blockchain/OneTimeChannel.sol\":2476:2506  ECRecovery.recover(_hash,_sig) */\n      jump\t// in\n    tag_30:\n        /* \"blockchain/OneTimeChannel.sol\":2469:2506  return ECRecovery.recover(_hash,_sig) */\n      swap1\n      pop\n        /* \"blockchain/OneTimeChannel.sol\":2356:2514  function getSignerFromHashAndSig(bytes32 _hash, bytes _sig) \r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"blockchain/ECRecovery.sol\":627:1595  function recover(bytes32 hash, bytes sig)\r... */\n    tag_31:\n        /* \"blockchain/ECRecovery.sol\":707:714  address */\n      0x0\n        /* \"blockchain/ECRecovery.sol\":726:735  bytes32 r */\n      dup1\n        /* \"blockchain/ECRecovery.sol\":742:751  bytes32 s */\n      0x0\n        /* \"blockchain/ECRecovery.sol\":758:765  uint8 v */\n      dup1\n        /* \"blockchain/ECRecovery.sol\":827:829  65 */\n      0x41\n        /* \"blockchain/ECRecovery.sol\":813:816  sig */\n      dup6\n        /* \"blockchain/ECRecovery.sol\":813:823  sig.length */\n      mload\n        /* \"blockchain/ECRecovery.sol\":813:829  sig.length != 65 */\n      eq\n      iszero\n        /* \"blockchain/ECRecovery.sol\":809:867  if (sig.length != 65) {\r... */\n      iszero\n      tag_33\n      jumpi\n        /* \"blockchain/ECRecovery.sol\":856:857  0 */\n      0x0\n        /* \"blockchain/ECRecovery.sol\":840:859  return (address(0)) */\n      swap4\n      pop\n      jump(tag_32)\n        /* \"blockchain/ECRecovery.sol\":809:867  if (sig.length != 65) {\r... */\n    tag_33:\n        /* \"blockchain/ECRecovery.sol\":1144:1146  32 */\n      0x20\n        /* \"blockchain/ECRecovery.sol\":1139:1142  sig */\n      dup6\n        /* \"blockchain/ECRecovery.sol\":1135:1147  add(sig, 32) */\n      add\n        /* \"blockchain/ECRecovery.sol\":1129:1148  mload(add(sig, 32)) */\n      mload\n        /* \"blockchain/ECRecovery.sol\":1124:1148  r := mload(add(sig, 32)) */\n      swap3\n      pop\n        /* \"blockchain/ECRecovery.sol\":1176:1178  64 */\n      0x40\n        /* \"blockchain/ECRecovery.sol\":1171:1174  sig */\n      dup6\n        /* \"blockchain/ECRecovery.sol\":1167:1179  add(sig, 64) */\n      add\n        /* \"blockchain/ECRecovery.sol\":1161:1180  mload(add(sig, 64)) */\n      mload\n        /* \"blockchain/ECRecovery.sol\":1156:1180  s := mload(add(sig, 64)) */\n      swap2\n      pop\n        /* \"blockchain/ECRecovery.sol\":1216:1218  96 */\n      0x60\n        /* \"blockchain/ECRecovery.sol\":1211:1214  sig */\n      dup6\n        /* \"blockchain/ECRecovery.sol\":1207:1219  add(sig, 96) */\n      add\n        /* \"blockchain/ECRecovery.sol\":1201:1220  mload(add(sig, 96)) */\n      mload\n        /* \"blockchain/ECRecovery.sol\":1198:1199  0 */\n      0x0\n        /* \"blockchain/ECRecovery.sol\":1193:1221  byte(0, mload(add(sig, 96))) */\n      byte\n        /* \"blockchain/ECRecovery.sol\":1188:1221  v := byte(0, mload(add(sig, 96))) */\n      swap1\n      pop\n        /* \"blockchain/ECRecovery.sol\":1332:1334  27 */\n      0x1b\n        /* \"blockchain/ECRecovery.sol\":1328:1329  v */\n      dup2\n        /* \"blockchain/ECRecovery.sol\":1328:1334  v < 27 */\n      0xff\n      and\n      lt\n        /* \"blockchain/ECRecovery.sol\":1324:1360  if (v < 27) {\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"blockchain/ECRecovery.sol\":1350:1352  27 */\n      0x1b\n        /* \"blockchain/ECRecovery.sol\":1345:1352  v += 27 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"blockchain/ECRecovery.sol\":1324:1360  if (v < 27) {\r... */\n    tag_34:\n        /* \"blockchain/ECRecovery.sol\":1437:1439  27 */\n      0x1b\n        /* \"blockchain/ECRecovery.sol\":1432:1433  v */\n      dup2\n        /* \"blockchain/ECRecovery.sol\":1432:1439  v != 27 */\n      0xff\n      and\n      eq\n      iszero\n        /* \"blockchain/ECRecovery.sol\":1432:1450  v != 27 && v != 28 */\n      dup1\n      iszero\n      tag_35\n      jumpi\n      pop\n        /* \"blockchain/ECRecovery.sol\":1448:1450  28 */\n      0x1c\n        /* \"blockchain/ECRecovery.sol\":1443:1444  v */\n      dup2\n        /* \"blockchain/ECRecovery.sol\":1443:1450  v != 28 */\n      0xff\n      and\n      eq\n      iszero\n        /* \"blockchain/ECRecovery.sol\":1432:1450  v != 27 && v != 28 */\n    tag_35:\n        /* \"blockchain/ECRecovery.sol\":1428:1590  if (v != 27 && v != 28) {\r... */\n      iszero\n      tag_36\n      jumpi\n        /* \"blockchain/ECRecovery.sol\":1477:1478  0 */\n      0x0\n        /* \"blockchain/ECRecovery.sol\":1461:1480  return (address(0)) */\n      swap4\n      pop\n      jump(tag_32)\n        /* \"blockchain/ECRecovery.sol\":1428:1590  if (v != 27 && v != 28) {\r... */\n    tag_36:\n        /* \"blockchain/ECRecovery.sol\":1558:1582  ecrecover(hash, v, r, s) */\n      0x1\n        /* \"blockchain/ECRecovery.sol\":1568:1572  hash */\n      dup7\n        /* \"blockchain/ECRecovery.sol\":1574:1575  v */\n      dup3\n        /* \"blockchain/ECRecovery.sol\":1577:1578  r */\n      dup6\n        /* \"blockchain/ECRecovery.sol\":1580:1581  s */\n      dup6\n        /* \"blockchain/ECRecovery.sol\":1558:1582  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      0x0\n      dup7\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"blockchain/ECRecovery.sol\":1558:1582  ecrecover(hash, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"blockchain/ECRecovery.sol\":1551:1582  return ecrecover(hash, v, r, s) */\n      swap4\n      pop\n        /* \"blockchain/ECRecovery.sol\":627:1595  function recover(bytes32 hash, bytes sig)\r... */\n    tag_32:\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582042f7ae1e8bf41879b3c68f10e5b19c014a2d5f111e270b037c7c15a9b417a55e0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052604051608080610a8183398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508042016003819055506000600560006101000a81548160ff021916908315150217905550505050506109448061013d6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b73a86d1461005c57806371a97d13146100dd578063bb3ee2fb146100f4575b600080fd5b34801561006857600080fd5b506100db6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050610244565b005b3480156100e957600080fd5b506100f26106ce565b005b34801561010057600080fd5b506101696004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610783565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b600080610251858561080c565b91506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151561033d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4d6573736167652063616e206f6e6c79206265207369676e657220627920746881526020017f65206368616e6e656c206f70656e65722e00000000000000000000000000000081525060400191505060405180910390fd5b3083604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156103d557805182526020820191506020810190506020830392506103b0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050846000191681600019161415156104cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252605f8152602001807f5369676e61747572652077617320636f7272656374206275742074686520766181526020017f6c7565206265696e6720776974686472617720646f6573206e6f74206d61746381526020017f6820746861742073706563696669656420627920746865207369676e65722e0081525060600191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16318311151515610584576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001807f5265717565737465642076616c75652069732067726561746572207468616e2081526020017f74686973206368616e6e656c27732062616c616e63650000000000000000000081525060400191505060405180910390fd5b60001515600560009054906101000a900460ff16151514151561060f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4368616e6e656c20697320616c726561647920636c6f7365640000000000000081525060200191505060405180910390fd5b6001600560006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610692573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b4260035411151515610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4368616e6e656c2074696d656f7574206e6f742079657420656c61707365640081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600080600080610793868661080c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935093509350935092959194509250565b60006108188383610820565b905092915050565b6000806000806041855114151561083a576000935061090f565b6020850151925060408501519150606085015160001a9050601b8160ff16101561086557601b810190505b601b8160ff161415801561087d5750601c8160ff1614155b1561088b576000935061090f565b600186828585604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015610902573d6000803e3d6000fd5b5050506020604051035193505b505050929150505600a165627a7a7230582042f7ae1e8bf41879b3c68f10e5b19c014a2d5f111e270b037c7c15a9b417a55e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x80 DUP1 PUSH2 0xA81 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 TIMESTAMP ADD PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x944 DUP1 PUSH2 0x13D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5B73A86D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x71A97D13 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xBB3EE2FB EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x251 DUP6 DUP6 PUSH2 0x80C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D6573736167652063616E206F6E6C79206265207369676E6572206279207468 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x65206368616E6E656C206F70656E65722E000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x3D5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP5 PUSH1 0x0 NOT AND DUP2 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x5F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5369676E61747572652077617320636F72726563742062757420746865207661 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C7565206265696E6720776974686472617720646F6573206E6F74206D617463 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6820746861742073706563696669656420627920746865207369676E65722E00 DUP2 MSTORE POP PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE DUP4 GT ISZERO ISZERO ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265717565737465642076616C75652069732067726561746572207468616E20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74686973206368616E6E656C27732062616C616E636500000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4368616E6E656C20697320616C726561647920636C6F73656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4368616E6E656C2074696D656F7574206E6F742079657420656C617073656400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x793 DUP7 DUP7 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x818 DUP4 DUP4 PUSH2 0x820 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x41 DUP6 MLOAD EQ ISZERO ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x90F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x1B DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x865 JUMPI PUSH1 0x1B DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x1B DUP2 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI POP PUSH1 0x1C DUP2 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x90F JUMP JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP 0xf7 0xae 0x1e DUP12 DELEGATECALL XOR PUSH26 0xB3C68F10E5B19C014A2D5F111E270B037C7C15A9B417A55E0029 ",
							"sourceMap": "65:2452:1:-;;;297:376;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:7;457:13;;:23;;;;;;;;;;;;;;;;;;516;491:22;;:48;;;;;;;;;;;;;;;;;;574:22;550:21;;:46;;;;;;;;;;;;;;;;;;630:8;624:3;:14;607;:31;;;;660:5;649:8;;:16;;;;;;;;;;;;;;;;;;297:376;;;;65:2452;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b73a86d1461005c57806371a97d13146100dd578063bb3ee2fb146100f4575b600080fd5b34801561006857600080fd5b506100db6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050610244565b005b3480156100e957600080fd5b506100f26106ce565b005b34801561010057600080fd5b506101696004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610783565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b600080610251858561080c565b91506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151561033d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4d6573736167652063616e206f6e6c79206265207369676e657220627920746881526020017f65206368616e6e656c206f70656e65722e00000000000000000000000000000081525060400191505060405180910390fd5b3083604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156103d557805182526020820191506020810190506020830392506103b0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050846000191681600019161415156104cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252605f8152602001807f5369676e61747572652077617320636f7272656374206275742074686520766181526020017f6c7565206265696e6720776974686472617720646f6573206e6f74206d61746381526020017f6820746861742073706563696669656420627920746865207369676e65722e0081525060600191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16318311151515610584576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001807f5265717565737465642076616c75652069732067726561746572207468616e2081526020017f74686973206368616e6e656c27732062616c616e63650000000000000000000081525060400191505060405180910390fd5b60001515600560009054906101000a900460ff16151514151561060f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4368616e6e656c20697320616c726561647920636c6f7365640000000000000081525060200191505060405180910390fd5b6001600560006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610692573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b4260035411151515610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4368616e6e656c2074696d656f7574206e6f742079657420656c61707365640081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600080600080610793868661080c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935093509350935092959194509250565b60006108188383610820565b905092915050565b6000806000806041855114151561083a576000935061090f565b6020850151925060408501519150606085015160001a9050601b8160ff16101561086557601b810190505b601b8160ff161415801561087d5750601c8160ff1614155b1561088b576000935061090f565b600186828585604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015610902573d6000803e3d6000fd5b5050506020604051035193505b505050929150505600a165627a7a7230582042f7ae1e8bf41879b3c68f10e5b19c014a2d5f111e270b037c7c15a9b417a55e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5B73A86D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x71A97D13 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xBB3EE2FB EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x251 DUP6 DUP6 PUSH2 0x80C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D6573736167652063616E206F6E6C79206265207369676E6572206279207468 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x65206368616E6E656C206F70656E65722E000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x3D5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP5 PUSH1 0x0 NOT AND DUP2 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x5F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5369676E61747572652077617320636F72726563742062757420746865207661 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C7565206265696E6720776974686472617720646F6573206E6F74206D617463 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6820746861742073706563696669656420627920746865207369676E65722E00 DUP2 MSTORE POP PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE DUP4 GT ISZERO ISZERO ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265717565737465642076616C75652069732067726561746572207468616E20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74686973206368616E6E656C27732062616C616E636500000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4368616E6E656C20697320616C726561647920636C6F73656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4368616E6E656C2074696D656F7574206E6F742079657420656C617073656400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x793 DUP7 DUP7 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x818 DUP4 DUP4 PUSH2 0x820 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x41 DUP6 MLOAD EQ ISZERO ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x90F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x1B DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x865 JUMPI PUSH1 0x1B DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x1B DUP2 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI POP PUSH1 0x1C DUP2 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x90F JUMP JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP 0xf7 0xae 0x1e DUP12 DELEGATECALL XOR PUSH26 0xB3C68F10E5B19C014A2D5F111E270B037C7C15A9B417A55E0029 ",
							"sourceMap": "65:2452:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;910:992;;8:9:-1;5:2;;;30:1;27;20:12;5:2;910:992:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:181;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1914:181:1;;;;;;2103:241;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2103:241:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;910:992;1033:14;1290:13;1050:36;1074:5;1081:4;1050:23;:36::i;:::-;1033:53;;1165:13;;;;;;;;;;;1155:23;;:6;:23;;;1147:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:4;1339:5;1316:29;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1316:29:1;;;1306:40;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1306:40:1;;;;;;;;;;;;;;;;1290:56;;1443:5;1434:14;;;:5;:14;;;;1426:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:4;1586:21;;;1577:5;:30;;1569:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1736:5;1724:17;;:8;;;;;;;;;;;:17;;;1716:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1793:4;1782:8;;:15;;;;;;;;;;;;;;;;;;1810:21;;;;;;;;;;;:30;;:37;1841:5;1810:37;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1810:37:1;1871:22;;;;;;;;;;;1858:36;;;1914:181;1991:3;1973:14;;:21;;1964:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:22;;;;;;;;;;;2051:36;;;2103:241;2189:7;2197;2205;2213;2241:35;2265:5;2271:4;2241:23;:35::i;:::-;2277:13;;;;;;;;;;;2291:21;;;;;;;;;;;2313:22;;;;;;;;;;;2233:103;;;;;;;;2103:241;;;;;;;:::o;2356:158::-;2449:7;2476:30;2495:5;2501:4;2476:18;:30::i;:::-;2469:37;;2356:158;;;;:::o;627:968:0:-;707:7;726:9;742;758:7;827:2;813:3;:10;:16;;809:58;;;856:1;840:19;;;;809:58;1144:2;1139:3;1135:12;1129:19;1124:24;;1176:2;1171:3;1167:12;1161:19;1156:24;;1216:2;1211:3;1207:12;1201:19;1198:1;1193:28;1188:33;;1332:2;1328:1;:6;;;1324:36;;;1350:2;1345:7;;;;1324:36;1437:2;1432:1;:7;;;;:18;;;;;1448:2;1443:1;:7;;;;1432:18;1428:162;;;1477:1;1461:19;;;;1428:162;1558:24;1568:4;1574:1;1577;1580;1558:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1558:24:0;;;;;;;;1551:31;;627:968;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "474400",
								"executionCost": "101756",
								"totalCost": "576156"
							},
							"external": {
								"closeChannel(bytes32,bytes,uint256)": "infinite",
								"getChannelParties(bytes32,bytes)": "infinite",
								"timeOutChannel()": "30622"
							},
							"internal": {
								"getSignerFromHashAndSig(bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 2517,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "MSTORE"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "MLOAD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSHSIZE"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP4"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "CODECOPY"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP2"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "MSTORE"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP2"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "MLOAD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP3"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP2"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "MLOAD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP3"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP2"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "MLOAD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP3"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP2"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "MLOAD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP3"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP2"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "POP"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "POP"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "POP"
								},
								{
									"begin": 473,
									"end": 480,
									"name": "DUP4"
								},
								{
									"begin": 457,
									"end": 470,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 457,
									"end": 470,
									"name": "DUP1"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "EXP"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "DUP2"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "SLOAD"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "DUP2"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "MUL"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "NOT"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "AND"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "SWAP1"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "DUP4"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "AND"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "MUL"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "OR"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "SWAP1"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "SSTORE"
								},
								{
									"begin": 457,
									"end": 480,
									"name": "POP"
								},
								{
									"begin": 516,
									"end": 539,
									"name": "DUP3"
								},
								{
									"begin": 491,
									"end": 513,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 491,
									"end": 513,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "EXP"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "DUP2"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "SLOAD"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "DUP2"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "MUL"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "NOT"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "AND"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "SWAP1"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "DUP4"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "AND"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "MUL"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "OR"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "SWAP1"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "SSTORE"
								},
								{
									"begin": 491,
									"end": 539,
									"name": "POP"
								},
								{
									"begin": 574,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 550,
									"end": 571,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 550,
									"end": 571,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "EXP"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "SLOAD"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "MUL"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "NOT"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "AND"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "DUP4"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "AND"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "MUL"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "OR"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "SSTORE"
								},
								{
									"begin": 550,
									"end": 596,
									"name": "POP"
								},
								{
									"begin": 630,
									"end": 638,
									"name": "DUP1"
								},
								{
									"begin": 624,
									"end": 627,
									"name": "TIMESTAMP"
								},
								{
									"begin": 624,
									"end": 638,
									"name": "ADD"
								},
								{
									"begin": 607,
									"end": 621,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 607,
									"end": 638,
									"name": "DUP2"
								},
								{
									"begin": 607,
									"end": 638,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 638,
									"name": "SSTORE"
								},
								{
									"begin": 607,
									"end": 638,
									"name": "POP"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 649,
									"end": 657,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 649,
									"end": 657,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "EXP"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SLOAD"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "MUL"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "NOT"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "AND"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "DUP4"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "ISZERO"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "ISZERO"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "MUL"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "OR"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SSTORE"
								},
								{
									"begin": 649,
									"end": 665,
									"name": "POP"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "POP"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "POP"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "POP"
								},
								{
									"begin": 297,
									"end": 673,
									"name": "POP"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "DUP1"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "CODECOPY"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2517,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582042f7ae1e8bf41879b3c68f10e5b19c014a2d5f111e270b037c7c15a9b417a55e0029",
									".code": [
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "MSTORE"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "LT"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "JUMPI"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "SWAP1"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "DIV"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "AND"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "5B73A86D"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "EQ"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "JUMPI"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "71A97D13"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "EQ"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "JUMPI"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "BB3EE2FB"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "EQ"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "JUMPI"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "JUMPDEST"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "DUP1"
										},
										{
											"begin": 65,
											"end": 2517,
											"name": "REVERT"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SUB"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "NOT"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "AND"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DIV"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "MUL"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "MLOAD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "MSTORE"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP4"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "MSTORE"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP4"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP4"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP5"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "JUMP"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "STOP"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "POP"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "JUMP"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "STOP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "JUMPDEST"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SUB"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "NOT"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DIV"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MUL"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MLOAD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP4"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP4"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP4"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP5"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "JUMP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "JUMPDEST"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MLOAD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP6"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP5"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP4"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP5"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "MLOAD"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SUB"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "RETURN"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 910,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 1033,
											"end": 1047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1303,
											"name": "DUP1"
										},
										{
											"begin": 1050,
											"end": 1086,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP6"
										},
										{
											"begin": 1081,
											"end": 1085,
											"name": "DUP6"
										},
										{
											"begin": 1050,
											"end": 1073,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1050,
											"end": 1086,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1086,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1050,
											"end": 1086,
											"name": "JUMPDEST"
										},
										{
											"begin": 1033,
											"end": 1086,
											"name": "SWAP2"
										},
										{
											"begin": 1033,
											"end": 1086,
											"name": "POP"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "DUP1"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "SLOAD"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "EXP"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "DIV"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1178,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1178,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1178,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1178,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "ISZERO"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "ISZERO"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "4D6573736167652063616E206F6E6C79206265207369676E6572206279207468"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "65206368616E6E656C206F70656E65722E000000000000000000000000000000"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "REVERT"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1147,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "ADDRESS"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "DUP4"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "MLOAD"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "DUP4"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "1000000000000000000000000"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "MUL"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "MSTORE"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "DUP3"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "MSTORE"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "SWAP3"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "MSTORE"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "MLOAD"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "DUP3"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "MLOAD"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "ADD"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "DUP4"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "ADD"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "SWAP2"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "MLOAD"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "SWAP2"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "SUB"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1346,
											"name": "KECCAK256"
										},
										{
											"begin": 1290,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1448,
											"name": "DUP5"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "NOT"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "AND"
										},
										{
											"begin": 1434,
											"end": 1439,
											"name": "DUP2"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "NOT"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "AND"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "EQ"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ISZERO"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ISZERO"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "JUMPI"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MLOAD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP3"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "SUB"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP3"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "5F"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "5369676E61747572652077617320636F72726563742062757420746865207661"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "6C7565206265696E6720776974686472617720646F6573206E6F74206D617463"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "6820746861742073706563696669656420627920746865207369676E65722E00"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MSTORE"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "POP"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "SWAP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "POP"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "POP"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "MLOAD"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "SWAP2"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "SUB"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "SWAP1"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "REVERT"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1426,
											"end": 1548,
											"name": "JUMPDEST"
										},
										{
											"begin": 1594,
											"end": 1598,
											"name": "ADDRESS"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "BALANCE"
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "DUP4"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "GT"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "ISZERO"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "ISZERO"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "ISZERO"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "JUMPI"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "MLOAD"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "MSTORE"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "ADD"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP1"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP1"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "ADD"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP3"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "SUB"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP3"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "MSTORE"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "MSTORE"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "ADD"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP1"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "5265717565737465642076616C75652069732067726561746572207468616E20"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "MSTORE"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "ADD"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "74686973206368616E6E656C27732062616C616E636500000000000000000000"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "MSTORE"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "POP"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "ADD"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "SWAP2"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "POP"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "POP"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "MLOAD"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "DUP1"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "SWAP2"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "SUB"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "SWAP1"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "REVERT"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1569,
											"end": 1666,
											"name": "JUMPDEST"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "ISZERO"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "ISZERO"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "SWAP1"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "SLOAD"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "SWAP1"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "EXP"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "SWAP1"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "DIV"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "AND"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "ISZERO"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "ISZERO"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "EQ"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ISZERO"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ISZERO"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "JUMPI"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MLOAD"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MSTORE"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP3"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SUB"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP3"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MSTORE"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MSTORE"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "4368616E6E656C20697320616C726561647920636C6F73656400000000000000"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MSTORE"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP2"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MLOAD"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP2"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SUB"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "REVERT"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "JUMPDEST"
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1782,
											"end": 1790,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1782,
											"end": 1790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "EXP"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "SLOAD"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "MUL"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "NOT"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "AND"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "DUP4"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "ISZERO"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "ISZERO"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "MUL"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "OR"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "SSTORE"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "SWAP1"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "SLOAD"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "SWAP1"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "EXP"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "SWAP1"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "DIV"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1831,
											"name": "AND"
										},
										{
											"begin": 1810,
											"end": 1840,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1840,
											"name": "AND"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1841,
											"end": 1846,
											"name": "DUP5"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "ISZERO"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "MUL"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP4"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP2"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP6"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP9"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP9"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "CALL"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP4"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SLOAD"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "EXP"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DIV"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "AND"
										},
										{
											"begin": 1858,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1858,
											"end": 1894,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1914,
											"end": 2095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1973,
											"end": 1987,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1973,
											"end": 1987,
											"name": "SLOAD"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "GT"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "ISZERO"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "ISZERO"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "ISZERO"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "JUMPI"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "MLOAD"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "MSTORE"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "ADD"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "ADD"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP3"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "SUB"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP3"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "MSTORE"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "MSTORE"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "ADD"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "4368616E6E656C2074696D656F7574206E6F742079657420656C617073656400"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "MSTORE"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "ADD"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "SWAP2"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "MLOAD"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "SWAP2"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "SUB"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "SWAP1"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "REVERT"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1964,
											"end": 2030,
											"name": "JUMPDEST"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "SWAP1"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "SLOAD"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "SWAP1"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "EXP"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "SWAP1"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "DIV"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2086,
											"name": "AND"
										},
										{
											"begin": 2051,
											"end": 2087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2087,
											"name": "AND"
										},
										{
											"begin": 2051,
											"end": 2087,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "JUMPDEST"
										},
										{
											"begin": 2189,
											"end": 2196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2204,
											"name": "DUP1"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2220,
											"name": "DUP1"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "DUP7"
										},
										{
											"begin": 2271,
											"end": 2275,
											"name": "DUP7"
										},
										{
											"begin": 2241,
											"end": 2264,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "JUMPDEST"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "DUP1"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "SWAP1"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "SLOAD"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "SWAP1"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "EXP"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "SWAP1"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "DIV"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2277,
											"end": 2290,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "SWAP1"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "SLOAD"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "SWAP1"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "EXP"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "SWAP1"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "DIV"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "AND"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "SLOAD"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "EXP"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "DIV"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "SWAP4"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "POP"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "SWAP4"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "POP"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "SWAP4"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "POP"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "SWAP4"
										},
										{
											"begin": 2233,
											"end": 2336,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP6"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP5"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "SWAP3"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 2103,
											"end": 2344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2356,
											"end": 2514,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2356,
											"end": 2514,
											"name": "JUMPDEST"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2506,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "DUP4"
										},
										{
											"begin": 2501,
											"end": 2505,
											"name": "DUP4"
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2476,
											"end": 2506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2506,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2476,
											"end": 2506,
											"name": "JUMPDEST"
										},
										{
											"begin": 2469,
											"end": 2506,
											"name": "SWAP1"
										},
										{
											"begin": 2469,
											"end": 2506,
											"name": "POP"
										},
										{
											"begin": 2356,
											"end": 2514,
											"name": "SWAP3"
										},
										{
											"begin": 2356,
											"end": 2514,
											"name": "SWAP2"
										},
										{
											"begin": 2356,
											"end": 2514,
											"name": "POP"
										},
										{
											"begin": 2356,
											"end": 2514,
											"name": "POP"
										},
										{
											"begin": 2356,
											"end": 2514,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 707,
											"end": 714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP1"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP1"
										},
										{
											"begin": 827,
											"end": 829,
											"name": "PUSH",
											"value": "41"
										},
										{
											"begin": 813,
											"end": 816,
											"name": "DUP6"
										},
										{
											"begin": 813,
											"end": 823,
											"name": "MLOAD"
										},
										{
											"begin": 813,
											"end": 829,
											"name": "EQ"
										},
										{
											"begin": 813,
											"end": 829,
											"name": "ISZERO"
										},
										{
											"begin": 809,
											"end": 867,
											"name": "ISZERO"
										},
										{
											"begin": 809,
											"end": 867,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 809,
											"end": 867,
											"name": "JUMPI"
										},
										{
											"begin": 856,
											"end": 857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 840,
											"end": 859,
											"name": "SWAP4"
										},
										{
											"begin": 840,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 840,
											"end": 859,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 840,
											"end": 859,
											"name": "JUMP"
										},
										{
											"begin": 809,
											"end": 867,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 809,
											"end": 867,
											"name": "JUMPDEST"
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "ADD"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "MLOAD"
										},
										{
											"begin": 1124,
											"end": 1148,
											"name": "SWAP3"
										},
										{
											"begin": 1124,
											"end": 1148,
											"name": "POP"
										},
										{
											"begin": 1176,
											"end": 1178,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1174,
											"name": "DUP6"
										},
										{
											"begin": 1167,
											"end": 1179,
											"name": "ADD"
										},
										{
											"begin": 1161,
											"end": 1180,
											"name": "MLOAD"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "POP"
										},
										{
											"begin": 1216,
											"end": 1218,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1211,
											"end": 1214,
											"name": "DUP6"
										},
										{
											"begin": 1207,
											"end": 1219,
											"name": "ADD"
										},
										{
											"begin": 1201,
											"end": 1220,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "BYTE"
										},
										{
											"begin": 1188,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1221,
											"name": "POP"
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "DUP2"
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "AND"
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "LT"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "ISZERO"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "DUP2"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "ADD"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "SWAP1"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "POP"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "JUMPDEST"
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1432,
											"end": 1439,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1432,
											"end": 1439,
											"name": "AND"
										},
										{
											"begin": 1432,
											"end": 1439,
											"name": "EQ"
										},
										{
											"begin": 1432,
											"end": 1439,
											"name": "ISZERO"
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "DUP1"
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "ISZERO"
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "JUMPI"
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "POP"
										},
										{
											"begin": 1448,
											"end": 1450,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "DUP2"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "AND"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "EQ"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "ISZERO"
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "JUMPDEST"
										},
										{
											"begin": 1428,
											"end": 1590,
											"name": "ISZERO"
										},
										{
											"begin": 1428,
											"end": 1590,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1428,
											"end": 1590,
											"name": "JUMPI"
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "SWAP4"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "POP"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "JUMP"
										},
										{
											"begin": 1428,
											"end": 1590,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1428,
											"end": 1590,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1568,
											"end": 1572,
											"name": "DUP7"
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "DUP3"
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "DUP6"
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "DUP6"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MLOAD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP2"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MSTORE"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "ADD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MSTORE"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MLOAD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP1"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP6"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "NOT"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "NOT"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP2"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MSTORE"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "ADD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP5"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP2"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MSTORE"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "ADD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP4"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "NOT"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "NOT"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP2"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MSTORE"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "ADD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP3"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "NOT"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "NOT"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "AND"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP2"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MSTORE"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "ADD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "SWAP5"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MLOAD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP2"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "SUB"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "SWAP1"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP1"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP5"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "SUB"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "SWAP1"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "DUP7"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "GAS"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "CALL"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MLOAD"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "SUB"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "MLOAD"
										},
										{
											"begin": 1551,
											"end": 1582,
											"name": "SWAP4"
										},
										{
											"begin": 1551,
											"end": 1582,
											"name": "POP"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "SWAP3"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "SWAP2"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 627,
											"end": 1595,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"closeChannel(bytes32,bytes,uint256)": "5b73a86d",
							"getChannelParties(bytes32,bytes)": "bb3ee2fb",
							"timeOutChannel()": "71a97d13"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"},{\"name\":\"_sig\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"closeChannel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"timeOutChannel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"},{\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"getChannelParties\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_opener\",\"type\":\"address\"},{\"name\":\"_remainingBalanceWallet\",\"type\":\"address\"},{\"name\":\"_paymentReceiverWallet\",\"type\":\"address\"},{\"name\":\"_timeout\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"blockchain/OneTimeChannel.sol\":\"OneTimeChannel\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"blockchain/ECRecovery.sol\":{\"keccak256\":\"0xbc0f1a5ae564e59820c27ec3e2dada4f3e9783d3c3ac8f99c216a6adffacad24\",\"urls\":[\"bzzr://d63fa50c74c101b84a3b836d86a74e4dae95901a25f93a07dab3009ced367b79\"]},\"blockchain/OneTimeChannel.sol\":{\"keccak256\":\"0xd7c27ad70a4568c8eb398a77a663f3944231bf964380cd941b5ee15e7953bcba\",\"urls\":[\"bzzr://c0f65e53d8b5ca18c428cbf5cf64a3e6ae26f11412df7fc1cda981fa629dc43e\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "blockchain/ECRecovery.sol:71:12: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n    return keccak256(\r\n           ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2015,
					"file": "blockchain/ECRecovery.sol",
					"start": 1943
				},
				"type": "Warning"
			}
		],
		"sources": {
			"blockchain/ECRecovery.sol": {
				"ast": {
					"absolutePath": "blockchain/ECRecovery.sol",
					"exportedSymbols": {
						"ECRecovery": [
							77
						]
					},
					"id": 78,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title Eliptic curve signature operations\r\n\n * @dev Based on https://gist.github.com/axic/5b33912c6f61ae6fd96d6c4a47afde6d\r\n\n * TODO Remove this library once solidity supports passing a signature to ecrecover.\r\nSee https://github.com/ethereum/solidity/issues/864\r\n\n ",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "ECRecovery",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "719:876:0",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 63,
														"src": "726:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 10,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "726:9:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 63,
														"src": "742:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 13,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "742:9:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 63,
														"src": "758:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 16,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 18,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "758:7:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 19,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "813:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "813:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3635",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "827:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "813:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 29,
												"nodeType": "IfStatement",
												"src": "809:58:0",
												"trueBody": {
													"id": 28,
													"nodeType": "Block",
													"src": "831:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 24,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "856:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 23,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "848:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 25,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "848:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"id": 26,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "847:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 9,
															"id": 27,
															"nodeType": "Return",
															"src": "840:19:0"
														}
													]
												}
											},
											{
												"externalReferences": [
													{
														"sig": {
															"declaration": 5,
															"isOffset": false,
															"isSlot": false,
															"src": "1139:3:0",
															"valueSize": 1
														}
													},
													{
														"s": {
															"declaration": 14,
															"isOffset": false,
															"isSlot": false,
															"src": "1156:1:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 5,
															"isOffset": false,
															"isSlot": false,
															"src": "1211:3:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 5,
															"isOffset": false,
															"isSlot": false,
															"src": "1171:3:0",
															"valueSize": 1
														}
													},
													{
														"v": {
															"declaration": 17,
															"isOffset": false,
															"isSlot": false,
															"src": "1188:1:0",
															"valueSize": 1
														}
													},
													{
														"r": {
															"declaration": 11,
															"isOffset": false,
															"isSlot": false,
															"src": "1124:1:0",
															"valueSize": 1
														}
													}
												],
												"id": 30,
												"nodeType": "InlineAssembly",
												"operations": "{\n    r := mload(add(sig, 32))\n    s := mload(add(sig, 64))\n    v := byte(0, mload(add(sig, 96)))\n}",
												"src": "1106:220:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "v",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1328:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3237",
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1332:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_27_by_1",
															"typeString": "int_const 27"
														},
														"value": "27"
													},
													"src": "1328:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 39,
												"nodeType": "IfStatement",
												"src": "1324:36:0",
												"trueBody": {
													"id": 38,
													"nodeType": "Block",
													"src": "1336:24:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 34,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1345:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3237",
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1350:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "1345:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 37,
															"nodeType": "ExpressionStatement",
															"src": "1345:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 40,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1432:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3237",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1437:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															},
															"value": "27"
														},
														"src": "1432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 43,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1443:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3238",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1448:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28_by_1",
																"typeString": "int_const 28"
															},
															"value": "28"
														},
														"src": "1443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1432:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 60,
													"nodeType": "Block",
													"src": "1494:96:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 54,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "1568:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 55,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "1574:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 56,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1577:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 57,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "1580:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 53,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "1558:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1558:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 9,
															"id": 59,
															"nodeType": "Return",
															"src": "1551:31:0"
														}
													]
												},
												"id": 61,
												"nodeType": "IfStatement",
												"src": "1428:162:0",
												"trueBody": {
													"id": 52,
													"nodeType": "Block",
													"src": "1452:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 48,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1477:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 47,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1469:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1469:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"id": 50,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1468:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 9,
															"id": 51,
															"nodeType": "Return",
															"src": "1461:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Recover signer address from a message by using their signature\r\n@param hash bytes32 message, the hash is the signed message. What is recovered is the signer address.\r\n@param sig bytes signature, the signature is generated using web3.eth.sign()\r",
									"id": 63,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "644:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "658:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "658:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:25:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "707:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "706:9:0"
									},
									"scope": 77,
									"src": "627:968:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1841:180:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1961:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
															},
															"value": "\u0019Ethereum Signed Message:\n32"
														},
														{
															"argumentTypes": null,
															"id": 72,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "2004:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 70,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1943:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 69,
												"id": 74,
												"nodeType": "Return",
												"src": "1936:79:0"
											}
										]
									},
									"documentation": "toEthSignedMessageHash\r\n@dev prefix a bytes32 value with \"\\x19Ethereum Signed Message:\"\r\n@dev and hash the result\r",
									"id": 76,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1777:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1776:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1828:9:0"
									},
									"scope": 77,
									"src": "1745:276:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 78,
							"src": "322:1702:0"
						}
					],
					"src": "0:2024:0"
				},
				"id": 0
			},
			"blockchain/OneTimeChannel.sol": {
				"ast": {
					"absolutePath": "blockchain/OneTimeChannel.sol",
					"exportedSymbols": {
						"OneTimeChannel": [
							257
						]
					},
					"id": 258,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "blockchain/ECRecovery.sol",
							"file": "blockchain/ECRecovery.sol",
							"id": 80,
							"nodeType": "ImportDirective",
							"scope": 258,
							"sourceUnit": 78,
							"src": "28:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 257,
							"linearizedBaseContracts": [
								257
							],
							"name": "OneTimeChannel",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 82,
									"name": "channelOpener",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "98:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "98:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 84,
									"name": "remainingBalanceWallet",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "126:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "126:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 86,
									"name": "paymentReceiverWallet",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "163:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 85,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 88,
									"name": "expirationDate",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "199:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "199:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 92,
									"name": "signatures",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "225:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 91,
										"keyType": {
											"id": 89,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "234:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "225:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueType": {
											"id": 90,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "245:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 94,
									"name": "isClosed",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "271:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 93,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "271:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "446:227:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "channelOpener",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "457:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 106,
														"name": "_opener",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "473:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "457:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "457:23:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 109,
														"name": "remainingBalanceWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "491:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 110,
														"name": "_remainingBalanceWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "516:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "491:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "491:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 113,
														"name": "paymentReceiverWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "550:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 114,
														"name": "_paymentReceiverWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "574:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "550:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "550:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 117,
														"name": "expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "607:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 118,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "624:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 119,
															"name": "_timeout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "630:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "624:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "607:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "607:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 123,
														"name": "isClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "649:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "660:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "649:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "649:16:1"
											}
										]
									},
									"documentation": null,
									"id": 128,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "_opener",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"name": "_remainingBalanceWallet",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "327:31:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"name": "_paymentReceiverWallet",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "360:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"name": "_timeout",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "410:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "309:115:1"
									},
									"payable": true,
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:0:1"
									},
									"scope": 257,
									"src": "297:376:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "984:918:1",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 200,
														"src": "1033:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1033:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 140,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1074:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "_sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1081:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 139,
														"name": "getSignerFromHashAndSig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1050:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1033:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 145,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "1155:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "channelOpener",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1165:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1155:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d6573736167652063616e206f6e6c79206265207369676e657220627920746865206368616e6e656c206f70656e65722e",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1180:51:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d1d1b791333dacf1577d4a5a566b4a63a7844a0cc0b5cd062077a128779e416",
																"typeString": "literal_string \"Message can only be signer by the channel opener.\""
															},
															"value": "Message can only be signer by the channel opener."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d1d1b791333dacf1577d4a5a566b4a63a7844a0cc0b5cd062077a128779e416",
																"typeString": "literal_string \"Message can only be signer by the channel opener.\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															275,
															276
														],
														"referencedDeclaration": 276,
														"src": "1147:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:85:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1147:85:1"
											},
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"name": "proof",
														"nodeType": "VariableDeclaration",
														"scope": 200,
														"src": "1290:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 151,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1290:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OneTimeChannel_$257",
																		"typeString": "contract OneTimeChannel"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 157,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "1339:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OneTimeChannel_$257",
																		"typeString": "contract OneTimeChannel"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "1316:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1316:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1316:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 153,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1306:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1290:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1434:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 163,
																"name": "_hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1443:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1434:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5369676e61747572652077617320636f727265637420627574207468652076616c7565206265696e6720776974686472617720646f6573206e6f74206d6174636820746861742073706563696669656420627920746865207369676e65722e",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1450:97:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b047c6d6c3d6752848191317ec53518b24d1d7b1f9681b57ec2d0d4f5733df15",
																"typeString": "literal_string \"Signature was correct but the value being withdraw does not match that specified by the signer.\""
															},
															"value": "Signature was correct but the value being withdraw does not match that specified by the signer."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b047c6d6c3d6752848191317ec53518b24d1d7b1f9681b57ec2d0d4f5733df15",
																"typeString": "literal_string \"Signature was correct but the value being withdraw does not match that specified by the signer.\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															275,
															276
														],
														"referencedDeclaration": 276,
														"src": "1426:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:122:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1426:122:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "1577:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 171,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1594:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OneTimeChannel_$257",
																				"typeString": "contract OneTimeChannel"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OneTimeChannel_$257",
																				"typeString": "contract OneTimeChannel"
																			}
																		],
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1586:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1586:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1586:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1577:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265717565737465642076616c75652069732067726561746572207468616e2074686973206368616e6e656c27732062616c616e6365",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1609:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4077493717daeb2328be99dda2aaf33c1566ec01af069148406a200e3d37ad",
																"typeString": "literal_string \"Requested value is greater than this channel's balance\""
															},
															"value": "Requested value is greater than this channel's balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4077493717daeb2328be99dda2aaf33c1566ec01af069148406a200e3d37ad",
																"typeString": "literal_string \"Requested value is greater than this channel's balance\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															275,
															276
														],
														"referencedDeclaration": 276,
														"src": "1569:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1569:97:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1569:97:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 179,
																"name": "isClosed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1724:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1736:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1724:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4368616e6e656c20697320616c726561647920636c6f736564",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1743:27:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e758bdbc076b00fcf93dd60035dcb1945097881bf76278b4b424659c2d20e6a3",
																"typeString": "literal_string \"Channel is already closed\""
															},
															"value": "Channel is already closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e758bdbc076b00fcf93dd60035dcb1945097881bf76278b4b424659c2d20e6a3",
																"typeString": "literal_string \"Channel is already closed\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															275,
															276
														],
														"referencedDeclaration": 276,
														"src": "1716:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1716:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "1716:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 185,
														"name": "isClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1782:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1793:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1782:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1782:15:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 192,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1841:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 189,
															"name": "paymentReceiverWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1810:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1810:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "1810:37:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 196,
															"name": "remainingBalanceWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1871:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 195,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "1858:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "1858:36:1"
											}
										]
									},
									"documentation": null,
									"id": 200,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "closeChannel",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "_hash",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "932:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"name": "_sig",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "947:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "947:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "959:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "959:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:39:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:0:1"
									},
									"scope": 257,
									"src": "910:992:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1953:142:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 204,
																"name": "expirationDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1973:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 205,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1991:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1973:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4368616e6e656c2074696d656f7574206e6f742079657420656c6170736564",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1996:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a311f54624c499c74237c741e04ddce7f788a95077056ec7ef4a906ea4d6afd",
																"typeString": "literal_string \"Channel timeout not yet elapsed\""
															},
															"value": "Channel timeout not yet elapsed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a311f54624c499c74237c741e04ddce7f788a95077056ec7ef4a906ea4d6afd",
																"typeString": "literal_string \"Channel timeout not yet elapsed\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															275,
															276
														],
														"referencedDeclaration": 276,
														"src": "1964:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1964:66:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "remainingBalanceWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "2064:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 210,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "2051:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2051:36:1"
											}
										]
									},
									"documentation": null,
									"id": 215,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "timeOutChannel",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1937:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:1"
									},
									"scope": 257,
									"src": "1914:181:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2222:122:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 231,
																	"name": "_hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2265:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 232,
																	"name": "_sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2271:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 230,
																"name": "getSignerFromHashAndSig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "2241:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (bytes32,bytes memory) pure returns (address)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2241:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 234,
															"name": "channelOpener",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "2277:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 235,
															"name": "paymentReceiverWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2291:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 236,
															"name": "remainingBalanceWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "2313:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 237,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2240:96:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_address_$",
														"typeString": "tuple(address,address,address,address)"
													}
												},
												"functionReturnParameters": 229,
												"id": 238,
												"nodeType": "Return",
												"src": "2233:103:1"
											}
										]
									},
									"documentation": null,
									"id": 240,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getChannelParties",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "_hash",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2130:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "_sig",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2145:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2145:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2129:27:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2189:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2197:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2205:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2213:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2188:33:1"
									},
									"scope": 257,
									"src": "2103:241:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2458:56:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 251,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "2495:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 252,
															"name": "_sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2501:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 249,
															"name": "ECRecovery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2476:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECRecovery_$77_$",
																"typeString": "type(library ECRecovery)"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 63,
														"src": "2476:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2469:37:1"
											}
										]
									},
									"documentation": null,
									"id": 256,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getSignerFromHashAndSig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "_hash",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2389:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "_sig",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2404:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2404:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2388:27:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2449:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2448:9:1"
									},
									"scope": 257,
									"src": "2356:158:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 258,
							"src": "65:2452:1"
						}
					],
					"src": "0:2517:1"
				},
				"id": 1
			}
		}
	}
}